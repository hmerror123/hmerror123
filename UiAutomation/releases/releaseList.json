[
  {
    "Id": "0",
    "Name": "UIAutomation 0.8.7 Beta 2",
    "DevelopmentStatus": "Beta",
    "Description": "This release continues to deliver the new elements' object model. Now, there are available three property holders (i.e., objects that are visible as properties that in turn hold a number of methods and properties):\nthe Keyboard property holder:\n{code:powershell}\n$element.Keyboard.TypeText(\"any text\");\n{code:powershell}\n(read more here [the Keyboard property])\n\nthe Mouse property holder:\n{code:powershell}\n$element.Mouse.LeftButtonClick();\n$element.Mouse.LeftButtonDoubleClick();\n$element.Mouse.RightButtonClick();\n{code:powershell}\n(read more here [the Mouse property])\n\nthe Control property holder:\n{code:powershell}\n$element.Control.InvokeContextMenu();\n$element.Control.Click(10, 10);\n{code:powershell}\n(read more here [the Control property])\n\nAlso, this release introduces new logging that is (expected to be) much more useful than any previous. The new logger represents cmdlet calls with parameters (elements are shown as hashtables) and method/properties of the new object model.\nBy default, the log is here: {\"$env:USERPROFILE\\Documents\\UIA.log\"}. You can set file name and the path by issuing the following command (there is no cmdlet right now):\n{code:powershell}\n[UIAutomation.AutomationFactory]::GetLogger(\"C:\\1\\new_logger_on_a_new_place.txt\");\n{code:powershell}",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2014-02-24T23:44:41.643-08:00",
    "Files": [
      {
        "Id": "c69a7871-db57-4d1f-9fc8-bb319731417d",
        "FileName": "UIAutomation.0.8.7B2.NET35.zip",
        "Url": "./0/c69a7871-db57-4d1f-9fc8-bb319731417d",
        "Type": "Application",
        "UploadDate": "2014-02-24T23:30:15.87-08:00"
      },
      {
        "Id": "9f70431c-073d-444d-80df-116cc4043595",
        "FileName": "UIAutomation.0.8.7B2.NET40.zip",
        "Url": "./0/9f70431c-073d-444d-80df-116cc4043595",
        "Type": "Application",
        "UploadDate": "2014-02-24T23:30:16.027-08:00"
      },
      {
        "Id": "c6af9542-a346-46bb-b1ca-e3082ed4a99f",
        "FileName": "UIAutomation.0.8.7B2.for.ModernUI.zip",
        "Url": "./0/c6af9542-a346-46bb-b1ca-e3082ed4a99f",
        "Type": "Application",
        "UploadDate": "2014-02-24T23:30:16.167-08:00"
      },
      {
        "Id": "a082e1f5-03d2-4e7c-a806-4a2eb7b1b396",
        "FileName": "UIAutomation.0.8.7B2.sources.zip",
        "Url": "./0/a082e1f5-03d2-4e7c-a806-4a2eb7b1b396",
        "Type": "Source Code",
        "UploadDate": "2014-02-24T23:30:16.323-08:00"
      },
      {
        "Id": "f701b28d-35eb-4339-a6fc-6517188e8757",
        "FileName": "UIAutomation.0.8.7B2.samples.zip",
        "Url": "./0/f701b28d-35eb-4339-a6fc-6517188e8757",
        "Type": "Example",
        "UploadDate": "2014-02-24T23:30:16.383-08:00"
      },
      {
        "Id": "51e9d0b8-84e9-401b-9d20-394cd4463403",
        "FileName": "InstallJavaSupport.zip",
        "Url": "./0/51e9d0b8-84e9-401b-9d20-394cd4463403",
        "Type": "Application",
        "UploadDate": "2014-02-24T23:30:16.447-08:00"
      }
    ]
  },
  {
    "Id": "1",
    "Name": "UIAutomation 0.8.7 Beta 1",
    "DevelopmentStatus": "Beta",
    "Description": "This version introduces new elements' object model that simplifies using of elements' patterns. For more information, please refer to [url:the documentation page|https://uiautomation.codeplex.com/wikipage?title=Object%20model&referringTitle=Documentation] and [url:presentation|http://softwaretestingusingpowershell.com/2013/12/25/the-new-elements-object-model-is-out-a-short-intro/].\n\nSince this version, the module works with Microsoft's UI Automation via wrappers what is no change for all except those who mix cmdlets and bare calls to UI Automation.\nIn the last case you need to add conversion:\n{code:powershell}\n# $nativeElement is AutomationElement\n# $wrapperElement is an IUiElementIUiElementProxy, the type the module returns\n$nativeElement = $wrapperElement.GetSourceElement();\n$wrapperElement = [UiAutomation.AutomationFactory]::GetUiElement($nativeElement);\n{code:powershell}",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2014-01-13T00:35:07.61-08:00",
    "Files": [
      {
        "Id": "41d94c1a-a75b-4045-b1f0-805ecaa60ea2",
        "FileName": "UIAutomation.0.8.7B1.NET35.zip",
        "Url": "./1/41d94c1a-a75b-4045-b1f0-805ecaa60ea2",
        "Type": "Application",
        "UploadDate": "2014-01-13T00:34:16.63-08:00"
      },
      {
        "Id": "fa3fdb2d-22e4-42b7-addc-0e9f3c433dd4",
        "FileName": "UIAutomation.0.8.7B1.NET40.zip",
        "Url": "./1/fa3fdb2d-22e4-42b7-addc-0e9f3c433dd4",
        "Type": "Application",
        "UploadDate": "2014-01-13T00:34:17.003-08:00"
      },
      {
        "Id": "165f84d7-205a-401d-adc7-bb847b754028",
        "FileName": "UIAutomation.0.8.7B1.for.ModernUI.zip",
        "Url": "./1/165f84d7-205a-401d-adc7-bb847b754028",
        "Type": "Application",
        "UploadDate": "2014-01-13T00:34:17.19-08:00"
      },
      {
        "Id": "7cdcefce-1cdb-42fe-ac27-d9f1b0a19d1f",
        "FileName": "UIAutomation.0.8.7B1.sources.zip",
        "Url": "./1/7cdcefce-1cdb-42fe-ac27-d9f1b0a19d1f",
        "Type": "Source Code",
        "UploadDate": "2014-01-13T00:34:17.427-08:00"
      },
      {
        "Id": "22575705-4114-4298-86dd-9fa1db0d9da7",
        "FileName": "UIAutomation.0.8.7B1.samples.zip",
        "Url": "./1/22575705-4114-4298-86dd-9fa1db0d9da7",
        "Type": "Example",
        "UploadDate": "2014-01-13T00:34:17.503-08:00"
      },
      {
        "Id": "799c50fc-d04c-417c-9e94-7656d3634a2a",
        "FileName": "InstallJavaSupport.zip",
        "Url": "./1/799c50fc-d04c-417c-9e94-7656d3634a2a",
        "Type": "Application",
        "UploadDate": "2014-01-13T00:34:17.52-08:00"
      }
    ]
  },
  {
    "Id": "2",
    "Name": "UIAutomation 0.8.7 Alphas",
    "DevelopmentStatus": "Alpha",
    "Description": "!! These alphas are replaced with 0.8.7 Beta 1\n\nThese versions are not for production use, even though 99% current tests are green (it's planned to increase framework's test base in several times, now there are only a half of thousand tests). For example, after closing a host (ISE, UIAutomationSpy, etc), an exception could appear.\n\n!!! Alpha 3\nThe first version of elements' object model is done (or almost done), unit tests cover it up to 95%, but there are no acceptance tests yet.\nClasses and interfaces are renamed as appropriate.\nConverters Microsoft's AutomationElement <-> UIA wrapper element are not yet available, so that now you could use this way:\n{code:powershell}\n# cmdlet returns a wrapper element\n$wnd = Start-Process calc -PassThru | Get-UiaWindow\n# getting the original AutomationElement\n$automationElement = $wnd.GetSourceElement()\n# wrapping an AutomationElement to UIA wrapper\n$wrapper = [UIAutomation.AutomationFactory]::GetUiElement($automationElement)\n{code:powershell}\n\n!!! Alpha 2\nThis version introduces elements' object model. Please refer to examples in [documentation|Object model] and in the blog.\n\n!!! Alpha 1\nThe biggest change is a move from System.Windows.Automation.AutomationElenent and System.Windows.Automation.AutomationElenentCollection to wrappers (names are temporary and just for better reading the code of module during refactoring, i.e. not a problem for end users) MySuperWrapper and MySuperCollection.\n\nThis is done for future extensibility and improvement of testability of the framework itself. Shortly, we will be able to pack into a wrapper more data or even to construct our own element on some partial data.\n\nYou can get the internal Automation Element via method:\n{code:powershell}\n(Start-Process calc -PassThru | Get-UiaWindow | Get-UiaButton 5).GetSourceElement();\n{code:powershell}\nand the internal AutomationElementCollection via property:\n{code:powershell}\n$collection.SourceCollection\n{code:powershell}\nif you need it.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2014-01-14T01:37:40.3-08:00",
    "Files": [
      {
        "Id": "1d2ea568-a225-40bf-92bf-f7e9d6da490a",
        "FileName": "UIAutomation 0.8.7 Aplha 3 .NET35.zip",
        "Url": "./2/1d2ea568-a225-40bf-92bf-f7e9d6da490a",
        "Type": "Application",
        "UploadDate": "2013-12-25T01:32:51.553-08:00"
      },
      {
        "Id": "9c470807-e970-4fdd-9e98-ec9dbb216d0e",
        "FileName": "UIAutomation.0.8.7A1.NET35.zip",
        "Url": "./2/9c470807-e970-4fdd-9e98-ec9dbb216d0e",
        "Type": "Application",
        "UploadDate": "2013-11-22T02:36:29.48-08:00"
      },
      {
        "Id": "3d4815a2-f8e7-410f-8b52-eba74321a18e",
        "FileName": "UIAutomation.0.8.7A1.NET40.zip",
        "Url": "./2/3d4815a2-f8e7-410f-8b52-eba74321a18e",
        "Type": "Application",
        "UploadDate": "2013-11-22T03:23:33.11-08:00"
      },
      {
        "Id": "311a1e08-3605-48c5-add3-4be9d42562e0",
        "FileName": "UIAutomation 0.8.7 Aplha 2 .NET35.zip",
        "Url": "./2/311a1e08-3605-48c5-add3-4be9d42562e0",
        "Type": "Application",
        "UploadDate": "2013-12-23T00:53:14.95-08:00"
      },
      {
        "Id": "70ee8ce0-3c17-47ea-b9f8-bd0170584495",
        "FileName": "UIAutomation 0.8.7 Aplha 2 .NET40.zip",
        "Url": "./2/70ee8ce0-3c17-47ea-b9f8-bd0170584495",
        "Type": "Application",
        "UploadDate": "2013-12-23T00:53:15.263-08:00"
      },
      {
        "Id": "a8684875-4db7-4e83-a1a9-11e13b4ba4a3",
        "FileName": "UIAutomation 0.8.7 Aplha 1 for Modern UI.zip",
        "Url": "./2/a8684875-4db7-4e83-a1a9-11e13b4ba4a3",
        "Type": "Application",
        "UploadDate": "2013-12-23T00:53:15.387-08:00"
      },
      {
        "Id": "a5167c53-7daf-497f-a776-e590b5f32bf3",
        "FileName": "UIAutomation 0.8.7 Aplha 3 .NET40.zip",
        "Url": "./2/a5167c53-7daf-497f-a776-e590b5f32bf3",
        "Type": "Application",
        "UploadDate": "2013-12-25T01:32:51.663-08:00"
      }
    ]
  },
  {
    "Id": "3",
    "Name": "UIAutomation 0.8.6 Betas",
    "DevelopmentStatus": "Beta",
    "Description": "Beta 1:\nadded:\n* the Get-UIAWindow cmdlet now supports -AutomaitonId and -Class parameters (with or without the -Name parameter)\n{code:powershell}\nStart-Process calc;\nsleep -Milliseconds 500;\nGet-UIAWindow -Class Console* | Read-UIAControlName;\nGet-UIAWindow -Class *frame* | Read-UIAControlName;\n{code:powershell}\n* the -Recurse parameter to the Get-UIAWindowcmdlet\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem -Name help | Invoke-UIAMenuItemExpand | Get-UIAMenuItem -Name *about* | Invoke-UIAMenuItemClick;\nGet-UIAWindow -pn calc -Recurse | Read-UIAControlName;\nGet-UIAWindow -n *about* -Recurse | Read-UIAControlName;\n{code:powershell}\nbroken:\n* the -SearchCriteria cmdlet in Get-UIAWindow_Class.ps1[ControlType] cmdlets could not be used (temporarily) with the -Name parameter\n\nBeta 2:\nadded:\n* the {\"Set-UIA[ControlType]ToggleState\"} cmdlet\n{code:powershell}\nSet-UIACheckBoxToggleState $true;\nSet-UIACheckBoxToggleState $false;\n{code:powershell}\nchanged:\n* the -Recurse parameter in the Get-UIAWindow cmdlet is set $false by default for code compatibility. In new code allowed it is set $true by default:\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem help | Invoke-UIAMenuItemExpand | Get-UIAMenuItem -n *about* | Invoke-UIAMenuItemClick;\n# -Recurse = $false, though you can set it $true\nGet-UIAWindow -pn calc;\nGet-UIAWindow -pid (Get-Process calc).Id;\nGet-UIAWindow -InputObject (Get-Process calc);\n# -Recurse = $true\nGet-UIAWindow -pn calc -Name *about*; # one window\nGet-UIAWindow -pn calc -Name *calc*; # two windows\n# earlier, we needed to issue somethink like:\nGet-UIAWindow -pn calc | Get-UIAChildWindow -Name *about*; # one window\n{code:powershell}\n* the {\"Invoke-UIA[ControlType]Toggle\"} cmdlets are now obsolete\nNote: I rewrote my release script yesterday and sources in Beta 2 might be partially wrong, at least without output folders. I'll fix and re-check this script in Beta 3.\n\nBeta 3:\nadded:\n* the Wait-UIAWindow cmdlet. This cmdlet works exactly as the Get-UIAWindow cmdlet (in fact, inherits from) with the only difference: the Test cmdlet returns $true/$false instead of AutomationElement/Exception\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem help | Invoke-UIAMenuItemExpand | Get-UIAMenuItem -n *about* | Invoke-UIAMenuItemClick;\nStart-Process calc -PassThru;\n\n# by process name\n# $true\nWait-UIAWindow -pn calc;\n# $true\nWait-UIAWindow -pn calc -n *about*;\n# $true\nWait-UIAWindow -pn calc -c *32770*;\n# $true\nWait-UIAWindow -pn calc -c *frame*;\n# $false\nWait-UIAWindow -pn calc -c *aaa*;\n\n# by process object\n# $true\nWait-UIAWindow -InputObject (Get-Process calc);\n\n# by process Id\n# $true\nWait-UIAWindow -pid (Get-Process calc).Id;\n# $true\nWait-UIAWindow -pid (Get-Process calc).Id -n *calc*;\n# $true\nWait-UIAWindow -pid (Get-Process calc).Id -n *about*;\n# $false\nWait-UIAWindow -pid (Get-Process calc).Id -n *asdf*;\n\n# by window title (name)\n# $false (there is no recursive sarch by default)\nWait-UIAWindow -n *about*\n# $true\nWait-UIAWindow -n *about* -Recurse\n{code:powershell}\n* the Get-UIAWindow cmdlet (and the Wait-UIAWindow cmdlet as well) supports -AutomationId and -Class parameters in recurse search:\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem help | Invoke-UIAMenuItemExpand | Get-UIAMenuItem -n *about* | Invoke-UIAMenuItemClick;\n\n# the good old way to get a window by process name\nGet-UIAWindow -pn calc;\n\n# all windows the process exposes\nGet-UIAWindow -pn calc -Recurse;\n\n# the About Calculator window\nGet-UIAWindow -pn calc -Name *about*;\n\n# both windows, \"Calculator\" and \"AboutCalculator\"\nGet-UIAWindow -pn calc -Name *calc*;\n\n# the main window (ClassName -eq 'CalcFrame')\nGet-UIAWindow -pn calc -Class *frame*;\n\n# the About window (ClassName -eq '#32770')\nGet-UIAWindow -pn calc -Class *327* | Read-UIAControlClass;\nGet-UIAWindow -pn calc -Class \"#32770\";\n{code:powershell}\n* the Get-UIAWindow and Wait-UIAWindow cmdlets now support search for a window or windows only if a certain control or control are on it/them.\nIt's especially useful (along with other ways to use this) for testing of wizards. For example, a typical setup. After you pressed the Install button, it shows one or more pages. You need to catch the last page, \"Complete\", for example.\nIf you use the folllowing code, you'll get an error:\n{code:powershell}\nGet-UIAWindow -n *wizard*title* -Seconds 120 | Wait-UIAControlState -SearchCriteria @{controlType=\"text\";name=\"*complete*\"} -Seconds 300;\n{code:powershell}\nBy the time the last page appeared, you window is gone (every page is a window with its own handle).\nNow, the window will be returned only after a control of interest is gotten:\n{code:powershell}\nGet-UIAWindow -n *wizard*title* -WithControl @{controlType=\"text\";name=\"*complete*\"} -Seconds 480;\n{code:powershell}\nAnother sample is the following (we perform it with hands):\n{code:powershell}\n# start calc.exe and ensure that it's in the Standard mode\n# run code:\nGet-UIAWindow -pn calc -Seconds 60 -WithControl @{controltype=\"button\";name=\"clear*all*\"}\n# change mode to Statistics: menu item View -> Statistics\n# the Get-UIAWindow cmdlet immediately returns the window. The CAD button is the button that has name \"Clear all...\"\n{code:powershell}\nbug fix:\n* Invoke-UIAControlContextMenu on Windows 8 (added WM_MOUSEMOVE after MOUSEDOWN and before MOUSEUP)\n* right click and double click (the same fix)\nNow, this works well:\n{code:powershell}\n# serivces.msc, run powershell as administrator\n# open the Connect... window via right click on the tree item\nGet-UIAWindow -n services | Get-UIATreeItem | Invoke-UIAControlContextMenu | Get-UIAMenuItem -n connect* | Invoke-UIAMenuItemClick;\n# double click on a service in the grid:\nGet-UIAWindow -n services | Get-UIADataGrid | Get-UIADataItem BranchCache | Invoke-UIAControlClick -DoubleClick;\n{code:powershell}\n\nBeta 4:\nadded:\n* Show-UIABanner, Hide-UIABanner, Add-UIABAnnerText and the -Banner parameter to the most of cmdlets (the STA mode is highly recommended, i.e. powershell.exe -sta)\n{code:powershell}\nShow-UIABanner \"We are testing now the availability of button 10\"\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAButton 10\nHide-UIABanner\n{code:powershell}\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow -Banner \"Test of Calculator menu\" | Get-UIAMenuItem view | Invoke-UIAMenuItemExpand | Get-UIAMenuItem Scientific | Invoke-UIAMenuItemClick;\n{code:powershell}\n* renovated New-UIAWizard, Add-UIAWizardStep and Invoke-UIAWizard cmdlets\n{code:powershell}\n#visit the following link:\n# https://github.com/apetrovskiy/STUPS/blob/master/samples/UIAutomation/Wizard/AddPrinterManually.ps1\n{code:powershell}\nNote: there is a known memory leak in the situation the Invoke-UIAWizard cmdlet got stuck with an unexpected window on the rightly caught current step.\nUpdate: now, this issue is fixed. The fix will be available in the release version. As it is known now, the issue was not in Wizard cmdlets. Nonetheless, the version that is in 0.8.6 Beta 4 shipped with not implemented StopAction.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2013-11-22T01:35:47.037-08:00",
    "Files": [
      {
        "Id": "6de6c606-3688-4521-a288-35b0c2ad413e",
        "FileName": "UIAutomation.0.8.6B5.NET35.zip",
        "Url": "./3/6de6c606-3688-4521-a288-35b0c2ad413e",
        "Type": "Application",
        "UploadDate": "2013-09-21T02:09:15.677-07:00"
      },
      {
        "Id": "8f8e10d7-bdfc-464b-bcb8-97c20d66c197",
        "FileName": "UIAutomation.0.8.6B1.NET35.zip",
        "Url": "./3/8f8e10d7-bdfc-464b-bcb8-97c20d66c197",
        "Type": "Application",
        "UploadDate": "2013-02-21T23:43:42.877-08:00"
      },
      {
        "Id": "133c7dea-04c9-4d02-b283-6838e3b62ba0",
        "FileName": "UIAutomation.0.8.6B1.NET40.zip",
        "Url": "./3/133c7dea-04c9-4d02-b283-6838e3b62ba0",
        "Type": "Application",
        "UploadDate": "2013-02-21T23:43:42.907-08:00"
      },
      {
        "Id": "e21d2a40-070c-41f6-865b-d6718347ee19",
        "FileName": "UIAutomation.0.8.6B1.for.Metro.testing.zip",
        "Url": "./3/e21d2a40-070c-41f6-865b-d6718347ee19",
        "Type": "Application",
        "UploadDate": "2013-02-21T23:43:42.923-08:00"
      },
      {
        "Id": "dd81df90-43f1-42af-8f99-71ec38f2b894",
        "FileName": "UIAutomation.0.8.6B2.NET35.zip",
        "Url": "./3/dd81df90-43f1-42af-8f99-71ec38f2b894",
        "Type": "Application",
        "UploadDate": "2013-02-24T23:40:41.943-08:00"
      },
      {
        "Id": "8ae83413-146e-42da-aa6d-5e78e53d7c05",
        "FileName": "UIAutomation.0.8.6B2.NET40.zip",
        "Url": "./3/8ae83413-146e-42da-aa6d-5e78e53d7c05",
        "Type": "Application",
        "UploadDate": "2013-02-24T23:40:41.99-08:00"
      },
      {
        "Id": "99c1c750-28e6-4d06-81db-0cf87739c2ca",
        "FileName": "UIAutomation.0.8.6B2.for.Metro.testing.zip",
        "Url": "./3/99c1c750-28e6-4d06-81db-0cf87739c2ca",
        "Type": "Application",
        "UploadDate": "2013-02-24T23:40:42.023-08:00"
      },
      {
        "Id": "c071e4e9-7024-4a24-8e22-91f1e439baeb",
        "FileName": "UIAutomation.0.8.6B2.sources.zip",
        "Url": "./3/c071e4e9-7024-4a24-8e22-91f1e439baeb",
        "Type": "Source Code",
        "UploadDate": "2013-02-24T23:40:42.07-08:00"
      },
      {
        "Id": "94cb6dbf-fdcb-4ab5-99dc-b79223fd582d",
        "FileName": "UIAutomation.0.8.6B2.samples.zip",
        "Url": "./3/94cb6dbf-fdcb-4ab5-99dc-b79223fd582d",
        "Type": "Example",
        "UploadDate": "2013-02-24T23:40:42.117-08:00"
      },
      {
        "Id": "b2ba855f-f4f6-4c06-8dc4-130b149554e5",
        "FileName": "UIAutomation.0.8.6B3.NET35.zip",
        "Url": "./3/b2ba855f-f4f6-4c06-8dc4-130b149554e5",
        "Type": "Application",
        "UploadDate": "2013-03-12T14:04:20.14-07:00"
      },
      {
        "Id": "81a1d3d8-85be-4d0f-8903-f93bee1da41c",
        "FileName": "UIAutomation.0.8.6B3.NET40.zip",
        "Url": "./3/81a1d3d8-85be-4d0f-8903-f93bee1da41c",
        "Type": "Application",
        "UploadDate": "2013-03-12T14:04:20.153-07:00"
      },
      {
        "Id": "553cb533-a66e-4f12-a966-120e71204c37",
        "FileName": "UIAutomation.0.8.6B3.for.Metro.testing.zip",
        "Url": "./3/553cb533-a66e-4f12-a966-120e71204c37",
        "Type": "Application",
        "UploadDate": "2013-03-12T14:04:20.17-07:00"
      },
      {
        "Id": "f6e8f5e3-8682-43e6-8c28-ec421f87946f",
        "FileName": "UIAutomation.0.8.6B3.sources.zip",
        "Url": "./3/f6e8f5e3-8682-43e6-8c28-ec421f87946f",
        "Type": "Source Code",
        "UploadDate": "2013-03-12T14:04:20.217-07:00"
      },
      {
        "Id": "678f8a8d-de5b-4f79-84d9-ee4c83455524",
        "FileName": "UIAutomation.0.8.6B3.samples.zip",
        "Url": "./3/678f8a8d-de5b-4f79-84d9-ee4c83455524",
        "Type": "Example",
        "UploadDate": "2013-03-12T14:04:20.263-07:00"
      },
      {
        "Id": "828c52e4-489f-4e22-b995-e3e1b3a4563a",
        "FileName": "UIAutomation.0.8.6B4.NET35.zip",
        "Url": "./3/828c52e4-489f-4e22-b995-e3e1b3a4563a",
        "Type": "Application",
        "UploadDate": "2013-03-28T03:14:13.597-07:00"
      },
      {
        "Id": "7c6e93cd-e74c-48c1-97dd-5c8b2c03029f",
        "FileName": "UIAutomation.0.8.6B4.NET40.zip",
        "Url": "./3/7c6e93cd-e74c-48c1-97dd-5c8b2c03029f",
        "Type": "Application",
        "UploadDate": "2013-03-28T03:14:13.627-07:00"
      },
      {
        "Id": "b1de93be-3f80-48f3-b056-cff16fab27e8",
        "FileName": "UIAutomation.0.8.6B4.for.Metro.testing.zip",
        "Url": "./3/b1de93be-3f80-48f3-b056-cff16fab27e8",
        "Type": "Application",
        "UploadDate": "2013-03-28T03:14:13.643-07:00"
      },
      {
        "Id": "850800a0-a521-4c1d-bb3e-0d234c069d8f",
        "FileName": "UIAutomation.0.8.6B4.sources.zip",
        "Url": "./3/850800a0-a521-4c1d-bb3e-0d234c069d8f",
        "Type": "Source Code",
        "UploadDate": "2013-03-28T03:14:13.707-07:00"
      },
      {
        "Id": "647459ba-ddbd-416b-8635-88a3ff7fcd05",
        "FileName": "UIAutomation.0.8.6B4.samples.zip",
        "Url": "./3/647459ba-ddbd-416b-8635-88a3ff7fcd05",
        "Type": "Example",
        "UploadDate": "2013-03-28T03:14:13.753-07:00"
      },
      {
        "Id": "878fb4e8-1c7e-4482-b947-7e836e4d7fe8",
        "FileName": "UIAutomation.0.8.6B5.NET40.zip",
        "Url": "./3/878fb4e8-1c7e-4482-b947-7e836e4d7fe8",
        "Type": "Application",
        "UploadDate": "2013-09-21T02:09:15.91-07:00"
      },
      {
        "Id": "3cf7e7c0-dc21-46f3-b1c2-838f1e1baafe",
        "FileName": "UIAutomation.0.8.6B5.for.ModernUI.testing.zip",
        "Url": "./3/3cf7e7c0-dc21-46f3-b1c2-838f1e1baafe",
        "Type": "Application",
        "UploadDate": "2013-09-21T02:09:16.067-07:00"
      },
      {
        "Id": "32173403-2225-40fb-b568-eb838aa6af9f",
        "FileName": "UIAutomation.0.8.6B5.sources.zip",
        "Url": "./3/32173403-2225-40fb-b568-eb838aa6af9f",
        "Type": "Source Code",
        "UploadDate": "2013-09-21T02:09:16.24-07:00"
      },
      {
        "Id": "4cd428ea-b00c-4708-a0d2-e1c3fa8124ed",
        "FileName": "UIAutomation.0.8.6B5.samples.zip",
        "Url": "./3/4cd428ea-b00c-4708-a0d2-e1c3fa8124ed",
        "Type": "Example",
        "UploadDate": "2013-09-21T02:09:16.27-07:00"
      }
    ]
  },
  {
    "Id": "4",
    "Name": "UIAutomation 0.8.5",
    "DevelopmentStatus": "Beta",
    "Description": "!! The variety of parameterless and parameterized settings in search for a control:\nGet-UIAButton Next (no wildcards)\nGet-UIAButton Next* -Win32\nGet-UIAEdit -Value text*\nGet-UIAEdit -Value text* -Win32\nGet-UIAEdit text (no wildcards)\nGet-UIAEdit text* -Win32\n\n!! Java SWT official support\nyou need to edit and run the InstallJavaSupport.ps1 script\n\n!! UIAutomationSpy improvements\nUIAutomationSpy supports now the -Win32 and -Value parameters\n\n!! New cmdlets\n* Clear-UIAControlText\n{code: powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem View | Invoke-UIAMenuItemExpand | Get-UIAMenuItem Worksheets | Move-UIACursor -X 3 -Y 3;\nGet-UIAMenuItem Mortgage | Invoke-UIAMenuItemClick;\nGet-UIAEdit *purchase*price* -Win32 | Set-UIAEditText \"123\";\nGet-UIAEdit *purchase*price* -Win32 | Clear-UIAControlText;\n{code: powershell}\n\n!! Cmdlets improvements\n* the Set-UIAControlText cmdlet cleans the box before putting text in\n\n!! Logging improvements\n* UIAutomation.log now contains seconds and milliseconds\n* the timeout exception for controls contains more information about what was searched",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2013-02-18T21:15:55.98-08:00",
    "Files": [
      {
        "Id": "226ba599-1f87-4a04-bddb-5f51a85e61ba",
        "FileName": "UIAutomation.0.8.5.NET35.zip",
        "Url": "./4/226ba599-1f87-4a04-bddb-5f51a85e61ba",
        "Type": "Application",
        "UploadDate": "2013-02-18T21:10:23.363-08:00"
      },
      {
        "Id": "fd80d5ef-0d37-46ea-b529-e5b23886e2fd",
        "FileName": "UIAutomation.0.8.5.NET40.zip",
        "Url": "./4/fd80d5ef-0d37-46ea-b529-e5b23886e2fd",
        "Type": "Application",
        "UploadDate": "2013-02-18T21:10:23.427-08:00"
      },
      {
        "Id": "fbb76947-5f13-40cc-8ecc-359c67239e93",
        "FileName": "UIAutomation.0.8.5.for.Metro.testing.zip",
        "Url": "./4/fbb76947-5f13-40cc-8ecc-359c67239e93",
        "Type": "Application",
        "UploadDate": "2013-02-18T21:10:23.473-08:00"
      },
      {
        "Id": "0e0301b3-3926-4900-bada-bb1bda7f794c",
        "FileName": "JavaAccessSupport.zip",
        "Url": "./4/0e0301b3-3926-4900-bada-bb1bda7f794c",
        "Type": "Application",
        "UploadDate": "2013-02-18T21:10:23.55-08:00"
      },
      {
        "Id": "a771e558-9712-4b49-a9c0-12af61af4a4c",
        "FileName": "UIAutomation.0.8.5.sources.zip",
        "Url": "./4/a771e558-9712-4b49-a9c0-12af61af4a4c",
        "Type": "Source Code",
        "UploadDate": "2013-02-18T21:10:23.863-08:00"
      },
      {
        "Id": "85cc8dff-8dba-4b2f-a6bb-fcf89fa845c4",
        "FileName": "UIAutomation.0.8.5.samples.zip",
        "Url": "./4/85cc8dff-8dba-4b2f-a6bb-fcf89fa845c4",
        "Type": "Example",
        "UploadDate": "2013-02-18T21:10:24.067-08:00"
      }
    ]
  },
  {
    "Id": "5",
    "Name": "UIAutomation 0.8.5 Betas",
    "DevelopmentStatus": "Beta",
    "Description": "! Beta 1\n!! The variety of parameterless and parameterized settings in search for a control:\nGet-UIAButton Next (no wildcards)\nGet-UIAButton Next* -Win32\nGet-UIAEdit -Value text*\nGet-UIAEdit -Value text* -Win32\n\n!! Java SWT official support\nyou need to edit and run the InstallJavaSupport.ps1 script\n\n!! UIAutomationSpy improvements\nUIAutomationSpy supports now the -Win32 and -Value parameters\n! Beta 2\n!! New cmdlets\n* Clear-UIAControlText\n{code: powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem View | Invoke-UIAMenuItemExpand | Get-UIAMenuItem Worksheets | Move-UIACursor -X 3 -Y 3;\nGet-UIAMenuItem Mortgage | Invoke-UIAMenuItemClick;\nGet-UIAEdit *purchase*price* -Win32 | Set-UIAEditText \"123\";\nGet-UIAEdit *purchase*price* -Win32 | Clear-UIAControlText;\n{code: powershell}\n\n!! bug fix\nSuch cmdlets as Get-UIAComboBox, Get-UIATextBox with non-empty value in the field could not be caught when being run without parameters (a bug from Beta 1)\n\n! Beta 2-2\nminor fix of output ( a bug from Beta 2)",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2013-02-16T12:12:33.2-08:00",
    "Files": [
      {
        "Id": "9eb3b8bf-0d6d-4547-aa3b-a3716d49d84e",
        "FileName": "UIAutomation.0.8.5B4.NET35.zip",
        "Url": "./5/9eb3b8bf-0d6d-4547-aa3b-a3716d49d84e",
        "Type": "Application",
        "UploadDate": "2013-02-16T12:12:00.997-08:00"
      },
      {
        "Id": "580b0b7d-89a5-4321-8a26-3a0a4eeb06d9",
        "FileName": "UIAutomation.0.8.5B1.NET35.zip",
        "Url": "./5/580b0b7d-89a5-4321-8a26-3a0a4eeb06d9",
        "Type": "Application",
        "UploadDate": "2013-02-08T03:04:22.983-08:00"
      },
      {
        "Id": "65e547fc-c2ad-4b84-b8c6-812e217aa272",
        "FileName": "UIAutomation.0.8.5B1.NET40.zip",
        "Url": "./5/65e547fc-c2ad-4b84-b8c6-812e217aa272",
        "Type": "Application",
        "UploadDate": "2013-02-08T03:04:22.997-08:00"
      },
      {
        "Id": "db0c81b4-93a6-47cc-9de8-9fe57a012726",
        "FileName": "UIAutomation.0.8.5B1.for.Metro.testing.zip",
        "Url": "./5/db0c81b4-93a6-47cc-9de8-9fe57a012726",
        "Type": "Application",
        "UploadDate": "2013-02-08T03:04:23.03-08:00"
      },
      {
        "Id": "743b0ab9-ff43-49bd-bd17-d04732fe58ac",
        "FileName": "InstallJavaSupport.zip",
        "Url": "./5/743b0ab9-ff43-49bd-bd17-d04732fe58ac",
        "Type": "Application",
        "UploadDate": "2013-02-08T03:04:23.09-08:00"
      },
      {
        "Id": "a4d5da36-ee17-40f8-a5a3-e08249770469",
        "FileName": "UIAutomation.0.8.5B2.NET35.zip",
        "Url": "./5/a4d5da36-ee17-40f8-a5a3-e08249770469",
        "Type": "Application",
        "UploadDate": "2013-02-08T15:00:59.083-08:00"
      },
      {
        "Id": "b38e8a77-af34-4793-975c-c1bfdf4ab8ce",
        "FileName": "UIAutomation.0.8.5B2-2.NET35.zip",
        "Url": "./5/b38e8a77-af34-4793-975c-c1bfdf4ab8ce",
        "Type": "Application",
        "UploadDate": "2013-02-08T23:15:47.557-08:00"
      },
      {
        "Id": "881a4392-fe8f-473c-89b8-59af294563fe",
        "FileName": "UIAutomation.0.8.5B3.NET35.zip",
        "Url": "./5/881a4392-fe8f-473c-89b8-59af294563fe",
        "Type": "Application",
        "UploadDate": "2013-02-11T23:41:54.043-08:00"
      },
      {
        "Id": "65a9beab-c0ff-4aee-8029-a9c965c90a21",
        "FileName": "UIAutomation.0.8.5B3.NET40.zip",
        "Url": "./5/65a9beab-c0ff-4aee-8029-a9c965c90a21",
        "Type": "Application",
        "UploadDate": "2013-02-11T23:41:54.057-08:00"
      },
      {
        "Id": "3a9a18fd-8112-438f-8708-d984ec4c9af2",
        "FileName": "UIAutomation.0.8.5B3.for.Metro.testing.zip",
        "Url": "./5/3a9a18fd-8112-438f-8708-d984ec4c9af2",
        "Type": "Application",
        "UploadDate": "2013-02-11T23:41:54.107-08:00"
      }
    ]
  },
  {
    "Id": "6",
    "Name": "UIAutomation 0.8.4",
    "DevelopmentStatus": "Beta",
    "Description": "!! List of changes\n* Win32 clicks are used if InvokePattern failed (improved since 0.8.3)\n* the -CaseSensitive parameter in {\"Get-UIA[ControlType]\"} cmdlets when performing search without wildcards\n* the ConvertTo-UIASearchCriteria cmdlet provides richer output (the output includes patterns)\n* the Get-UIAControl cmdlet and all its derivatives ({\"Get-UIA[ControlType]\"} cmdlets) now support 'text search':\nGet-UIAButton OK;\n{\"# or\"}\nGet-UIAEdit abc;\nIt searches for the string provided in Name, AutomaitonId, ClassName and Value of a control. No wildcards allowed here.\n* there is also the -Value parameter in {\"Get-UIA[ControlType]\"} cmdlets (in this version it works with a bug: it returns all fields. It'll be fixed in 0.8.5)\n\n!! How to use\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAButton -Name [123] | Invoke-UIAButtonClick;\nGet-UIAText 123;\n{code:powershell}\n\n{code:powershell}\n# as administrator\nservices.msc;\nsleep -Seconds 2;\n# search for a grid cell. It may work slowly with hundreds of cells\nGet-UIAWindow -Name services | Get-UIAEdit 'BranchCache';\n{code:powershell}",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2013-02-05T02:42:49.413-08:00",
    "Files": [
      {
        "Id": "b4b6aacd-13e4-4dfd-86cc-6aa829271ad8",
        "FileName": "UIAutomation.0.8.4.NET35.zip",
        "Url": "./6/b4b6aacd-13e4-4dfd-86cc-6aa829271ad8",
        "Type": "Application",
        "UploadDate": "2013-02-05T02:41:51.33-08:00"
      },
      {
        "Id": "3f7ab4b9-e3b2-44fa-b376-abc8125b1315",
        "FileName": "UIAutomation.0.8.4.NET40.zip",
        "Url": "./6/3f7ab4b9-e3b2-44fa-b376-abc8125b1315",
        "Type": "Application",
        "UploadDate": "2013-02-05T02:41:51.407-08:00"
      },
      {
        "Id": "bb133b75-1281-411c-a2fb-8d7eb200107d",
        "FileName": "UIAutomation.0.8.4.for.Metro.testing.zip",
        "Url": "./6/bb133b75-1281-411c-a2fb-8d7eb200107d",
        "Type": "Application",
        "UploadDate": "2013-02-05T02:41:51.437-08:00"
      },
      {
        "Id": "dfb1d56e-3d6e-471f-861a-2d7062ebf68a",
        "FileName": "UIAutomation.0.8.4.sources.zip",
        "Url": "./6/dfb1d56e-3d6e-471f-861a-2d7062ebf68a",
        "Type": "Source Code",
        "UploadDate": "2013-02-05T02:41:51.533-08:00"
      },
      {
        "Id": "bb442b9b-92d1-4d59-ba8f-377335a8ce85",
        "FileName": "UIAutomation.0.8.4.samples.zip",
        "Url": "./6/bb442b9b-92d1-4d59-ba8f-377335a8ce85",
        "Type": "Example",
        "UploadDate": "2013-02-05T02:41:51.767-08:00"
      }
    ]
  },
  {
    "Id": "7",
    "Name": "UIAutomation 0.8.4 Betas",
    "DevelopmentStatus": "Beta",
    "Description": "Beta 1, Beta 2:\nClicks that were promised in 0.8.3 (if InvokePattern fails, a Win32 click is used) are here.\n\nBeta 3:\n* Win32 clicks are used if InvokePattern failed (improved since 0.8.3)\n* the -CaseSensitive parameter in Get-UIA[ControlType] cmdlets when performing search without wildcards\n* the ConvertTo-UIASearchCriteria cmdlet provides richer output (the output includes patterns)\n\nBeta 4:\n* the Get-UIAControl cmdlet and all its derivatives ({\"Get-UIA[ControlType]\"} cmdlets) now support 'text search':\nGet-UIAButton OK;\n{\"# or\"}\nGet-UIAEdit abc;\nIt searches for the string provided in Name, AutomaitonId, ClassName and Value properties of a control. No wildcards allowed here.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2013-02-03T05:12:03.313-08:00",
    "Files": [
      {
        "Id": "e20b5f7c-2beb-4209-bcb0-480250238147",
        "FileName": "UIAutomation.0.8.4B1.NET35.zip",
        "Url": "./7/e20b5f7c-2beb-4209-bcb0-480250238147",
        "Type": "Application",
        "UploadDate": "2013-01-18T11:19:16.78-08:00"
      },
      {
        "Id": "39c893b4-a6fe-49f8-becb-d8ed6f88afce",
        "FileName": "UIAutomation.0.8.4B2.NET35.zip",
        "Url": "./7/39c893b4-a6fe-49f8-becb-d8ed6f88afce",
        "Type": "Application",
        "UploadDate": "2013-01-18T11:51:33.93-08:00"
      },
      {
        "Id": "08dfb0b8-a21c-4643-a1b5-0bbd5dd2d8d6",
        "FileName": "UIAutomation.0.8.4B3.NET35.zip",
        "Url": "./7/08dfb0b8-a21c-4643-a1b5-0bbd5dd2d8d6",
        "Type": "Application",
        "UploadDate": "2013-01-27T14:33:38.407-08:00"
      },
      {
        "Id": "8e287dcc-a21d-4eb0-a3f2-42a600617571",
        "FileName": "UIAutomation.0.8.4B4.NET35.zip",
        "Url": "./7/8e287dcc-a21d-4eb0-a3f2-42a600617571",
        "Type": "Application",
        "UploadDate": "2013-01-29T05:38:08.083-08:00"
      }
    ]
  },
  {
    "Id": "8",
    "Name": "UIAutomation 0.8.3",
    "DevelopmentStatus": "Beta",
    "Description": "Changes in this release:\n* all invoke-click cmdlets now click via Win32 if the pattern failed or a control does not support the pattern at all\n* bugfix: SelectionPattern cmdlets (Get-UIA[ControlType]Selection) returned not only the selection, but also itself. Fixed\n* the Get-UIASelectedItem cmdlet for getting the selected item if there's no containers supported SelectionPattern available\n* bugfix: the Unregister-UIAEvent cmdlet fails after unregistering events. Fixed\n* the Get-UIARegisteredEvent cmdlet to get registered events\n\nNote: the declared \"improvements to work with text fields\" feature has been forgotten... You'll get it in the next release.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2013-01-09T14:30:57.117-08:00",
    "Files": [
      {
        "Id": "803a52ad-382d-4966-b02e-c288e8d3204d",
        "FileName": "UIAutomation.0.8.3.NET35.zip",
        "Url": "./8/803a52ad-382d-4966-b02e-c288e8d3204d",
        "Type": "Application",
        "UploadDate": "2013-01-09T13:11:27.58-08:00"
      },
      {
        "Id": "c28941dc-51b3-47bb-95cc-3b6aced8f6d2",
        "FileName": "UIAutomation.0.8.3.NET40.zip",
        "Url": "./8/c28941dc-51b3-47bb-95cc-3b6aced8f6d2",
        "Type": "Application",
        "UploadDate": "2013-01-09T13:11:27.66-08:00"
      },
      {
        "Id": "2fb415f4-09e1-4ad9-8eef-a9ffc97360f1",
        "FileName": "UIAutomation.0.8.3.for.Metro.testing.zip",
        "Url": "./8/2fb415f4-09e1-4ad9-8eef-a9ffc97360f1",
        "Type": "Application",
        "UploadDate": "2013-01-09T13:11:27.677-08:00"
      },
      {
        "Id": "710eb775-20a4-409e-ab09-bfbd241479e8",
        "FileName": "UIAutomation.0.8.3.sources.zip",
        "Url": "./8/710eb775-20a4-409e-ab09-bfbd241479e8",
        "Type": "Source Code",
        "UploadDate": "2013-01-09T13:11:27.723-08:00"
      },
      {
        "Id": "723684c4-2ea3-4aa6-8a98-35b28dac7179",
        "FileName": "UIAutomation.0.8.3.samples.zip",
        "Url": "./8/723684c4-2ea3-4aa6-8a98-35b28dac7179",
        "Type": "Example",
        "UploadDate": "2013-01-09T13:11:27.893-08:00"
      }
    ]
  },
  {
    "Id": "9",
    "Name": "UIAutomation 0.8.2",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces\n! Windows UIAutomation:\n!! bugfix:\n* the Invoke-UIAControlContextMenu | Get-UIAMenuItem | Invoke-UIAMenuItemClick sequence may fail in some cases. Now, the Invoke-UIAControlContextMenu cmdlet hits the control at point 3,3 by default (earlier was 0,0) what is more accurate.\n!! new default settings for Invoke-UIAControlContextMenu and Invoke-UIAControlClick:\n* {\"[UIAutomation.Preferences]::ClickOnControlByCoordX = 3\"}\n* {\"[UIAutomation.Preferences]::ClickOnControlByCoordY = 3\"}\n!! new cmdlets: Show-UIAExecutionPlan and Hide-UIAExecutionPlan (PS 3.0)\nThe Show-UIAExecutionPlan cmdlet turns on the highlighting of every control a pipeline step returns. For examples, the code Start-Process calc -PassThru | Get-UIAWindow | Get-UIAButton; Get-UIAMenuItem; will paint\n1) one ssquare for the window (with number 1)\n2) many squares for buttons (all of them with number 2)\n3) several squares for top-level menu items (with number 3 in the lower-right corner).\nThis should be useful when you are trying to learn what was returned on a certain step of the pipeline.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-11-02T13:24:01.277-07:00",
    "Files": [
      {
        "Id": "1225ef41-e51e-490d-bda9-eb2db61b1cf7",
        "FileName": "UIAutomation.0.8.2.NET35.zip",
        "Url": "./9/1225ef41-e51e-490d-bda9-eb2db61b1cf7",
        "Type": "Application",
        "UploadDate": "2012-11-02T13:23:21.51-07:00"
      },
      {
        "Id": "0624c242-02bd-47a3-b514-dacb59c585e1",
        "FileName": "UIAutomation.0.8.2.NET40.zip",
        "Url": "./9/0624c242-02bd-47a3-b514-dacb59c585e1",
        "Type": "Application",
        "UploadDate": "2012-11-02T13:23:21.557-07:00"
      },
      {
        "Id": "6e324533-9ec3-4d8c-b101-6d9b51f8531c",
        "FileName": "UIAutomation.0.8.2.for.Metro.testing.zip",
        "Url": "./9/6e324533-9ec3-4d8c-b101-6d9b51f8531c",
        "Type": "Application",
        "UploadDate": "2012-11-02T13:23:21.587-07:00"
      },
      {
        "Id": "d08d10d6-e787-4402-8040-0f1c8c9ec94e",
        "FileName": "UIAutomation.0.8.2.sources.zip",
        "Url": "./9/d08d10d6-e787-4402-8040-0f1c8c9ec94e",
        "Type": "Source Code",
        "UploadDate": "2012-11-02T13:23:21.697-07:00"
      },
      {
        "Id": "1781948d-d4a5-4270-92a3-a02b76882596",
        "FileName": "UIAutomation.0.8.2.samples.zip",
        "Url": "./9/1781948d-d4a5-4270-92a3-a02b76882596",
        "Type": "Example",
        "UploadDate": "2012-11-02T13:23:21.777-07:00"
      }
    ]
  },
  {
    "Id": "10",
    "Name": "UIAutomation 0.8.1",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces\n! Windows UIAutomation:\n!! new screenshot-taking settings:\n* not new: {\"[UIAutomation.Preferences]::OnErrorScreenShot\"} takes a screenshot if a cmdlet fails\n* {\"[UIAutomation.Preferences]::OnErrorScreenShotFormat\"} contains the format type that is used for taking a screenshot when a cmdlet fails. Default value is: {\"[System.Drawing.Imaging.ImageFormat]::Jpeg\"}\n* the {\"[UIAutomation.Preferences]::OnSuccessScreenShot\"} setting initiates taking screenshots when cmdlets succeed. This is the same, for example, as SmartBear's TestComplete feature called Test Visualizer: UIAutomaiton will save screenshots on every step of your test\n* the {\"[UIAutomation.Preferences]::OnSuccessScreenShotFormat\"} settings contains the format type for these screenshots (again, Jpeg is default)\n* there is one more new setting for screenshot taking: {\"[UIAutomation.Preferences]::HideHighlighterOnScreenShotTaking\"}\nThis settings ($true by default) hides the highlighter before taking a screenshot. This allows you to save pictures of windows and controls without red square to compare screen with pre-created files of controls with bitmaps.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-10-02T13:54:06.323-07:00",
    "Files": [
      {
        "Id": "2f8f31b4-862a-4b8c-b79b-910e4ab68158",
        "FileName": "UIAutomation.0.8.1.NET35.zip",
        "Url": "./10/2f8f31b4-862a-4b8c-b79b-910e4ab68158",
        "Type": "Application",
        "UploadDate": "2012-10-02T10:42:30.217-07:00"
      },
      {
        "Id": "40f9cf8c-d42f-4ce1-a1d5-2faecec41e79",
        "FileName": "UIAutomation.0.8.1.NET40.zip",
        "Url": "./10/40f9cf8c-d42f-4ce1-a1d5-2faecec41e79",
        "Type": "Application",
        "UploadDate": "2012-10-02T10:42:30.263-07:00"
      },
      {
        "Id": "7829c86e-4a7d-4481-9831-4f578709f432",
        "FileName": "UIAutomation.0.8.1.for.Metro.testing.zip",
        "Url": "./10/7829c86e-4a7d-4481-9831-4f578709f432",
        "Type": "Application",
        "UploadDate": "2012-10-02T10:42:30.313-07:00"
      },
      {
        "Id": "2b8dda1c-fb05-4352-9686-4bab636ef148",
        "FileName": "UIAutomation.0.8.1.sources.zip",
        "Url": "./10/2b8dda1c-fb05-4352-9686-4bab636ef148",
        "Type": "Source Code",
        "UploadDate": "2012-10-02T10:42:30.36-07:00"
      },
      {
        "Id": "7fdcfb98-bfcd-430f-ac59-163c0f456477",
        "FileName": "UIAutomation.0.8.1.samples.zip",
        "Url": "./10/7fdcfb98-bfcd-430f-ac59-163c0f456477",
        "Type": "Example",
        "UploadDate": "2012-10-02T10:42:30.42-07:00"
      }
    ]
  },
  {
    "Id": "11",
    "Name": "UIAutomation 0.8.0",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces\n! Metro UI testing:\n!! (P1) unattended runs of scripts\nUIARunner.exe is a utility that runs your PowerShell scripts from GUI as well as from command-line. Regarding unattended runs, UIARunner requires at least one file: the script you are running.\nNonetheless, there is also the possibility to use a 'profile' or 'autoexec' file (functioning similarly to autoexec.bat in elderly versions of Windows or the auto_open macro in MS EXcel) called UIARunner.ps1. Package includes the file, allowing you to run scripts as soon as you downloaded the package.\nThe command-line is :\nUIARunner .\\script1.ps1\nor\nUIARunner C:\\{\"[\"}path{\"]\"}\\script2.ps1\nThe test results are stored to the UIARunner_report.csv file in the folder of the application.\n!! (P2) bug fix in UIARunner\n!! (P3) bug fix in UIARunner\n\n{\" \"}\n! Windows UIAutomation:\n!! (R) the -SearchCriteria parameters in Get-UIA[ControlType] cmdlets\n!! (R) bugfix\n* the Save-UIAScreenshot cmdlet doesn't requires the -Description parameter. Parameters -Path and -Name work (fixed)\n!! (P5) bugfix\n* if a control is not found by MS UI Automation, search by Win32 API returns all the controls with handles (fixed)\n* [UIAutomation.Preferences]::AfterFailTurboTimeout was passed to the release not working (because of the tight release schedule) - fixed\n!! (P5) speeding up the test suite if a control's gone\nThe -IsCritical parameter tells the test that if a Get- or Wait- cmdlet fails, the default timeout will be set to the [UIAutomation.Preferences]::AfterFailTurboTimeout value and tests will work faster unitl a control or a window will be get successfully.\n!! (P4) output as a collection\nGet-UIAWindow and Get-UIA[ControlType] cmdlets return all objects that match the condition (-Name, -Class, and/or -AutomationId)\n!! (P4) the Search- cmdlets are *switched off*\nThe Search-UIAControl and Search-UIAWindow cmdlets are now obsolete and hidden from the public. Consider using Get-UIAWindow and Get-UIA[ControlType] instead. If you need them back, please explain the need in the forum.\n!! (P1) automated test result generation\nEach cmdlet reports the result as a test case\nif parameter {\"[\"}UIAutomation.Preferences{\"]\"}::EveryCmdletAsTestResult is set to $true\n{\" \"}\n!! (P1) UIARunner in the graphical mode shows the test results\n- (P2) UIARunner shows date/time, status, name of a test result, line number, pipeline position, error message and the path to a screenshot if available\n!! (P1) UIARunner in the graphical mode generates the same report as in the command-line mode\n!! (P2) UIAutomation, UIARunner, UIAutomaitonSpy now can display two squares over controls (over the control of interest and over its parent) what should help the operator to understand the hierachy of controls\n!! (P2) UIAutomationSpy reads autoconfig script\n- UIAutomationSpy read the UIAAutomaitonSpy.ps1 file if it's represented in the application's folder. The file is the same as UIARunner.ps1 and effective for running scripts from the Script tab\n{\" \"}\n! the satellite product TMX\n!! (P1) new sorting cmdlets\nnow return test results, test scenarios, test suites sorted by\n- date/time (test results)\n- time spent (test suites, test scenarios, test results)\n- Id (test suites, test scenarios, test results)\n- Name (test suites, test scenarios, test results)\n- Pass rate, i.e. pass/all ratio (test suites, test scenarios)\n- Fail rate, i.e. fail/all ratio (test suites, test scenarios)\nand filtered by the following conditions:\n- name (test suites, test scenarios, test results)\n- passed (test suites, test scenarios, test results)\n- failed (test suites, test scenarios, test results)\n- not tested (test suites, test scenarios, test results)\n- known issue (test suites, test scenarios, test results)\nSearch-TMXTestSuite\nSearch-TMXTestScenario\nSearch-TMXTestResult\n\n{\" \"}\nP1 == Preview1\nP2 == Preview2\nP3 == Preview3\nP4 == Preview4\nP5 == Preview5\nR == Release",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-09-21T09:55:03.527-07:00",
    "Files": [
      {
        "Id": "badde884-03c2-4919-94bb-edabee6e3e4c",
        "FileName": "UIAutomation.0.8.0.NET35.zip",
        "Url": "./11/badde884-03c2-4919-94bb-edabee6e3e4c",
        "Type": "Application",
        "UploadDate": "2012-09-21T09:54:37.433-07:00"
      },
      {
        "Id": "2adc14c8-4818-483a-8dc0-eb6d67c754b6",
        "FileName": "UIAutomation.0.8.0.NET40.zip",
        "Url": "./11/2adc14c8-4818-483a-8dc0-eb6d67c754b6",
        "Type": "Application",
        "UploadDate": "2012-09-21T09:54:37.463-07:00"
      },
      {
        "Id": "ab7a25a3-c4e4-4190-ab09-f55c6d22841d",
        "FileName": "UIAutomation.0.8.0.for.Metro.testing.zip",
        "Url": "./11/ab7a25a3-c4e4-4190-ab09-f55c6d22841d",
        "Type": "Application",
        "UploadDate": "2012-09-21T09:54:37.48-07:00"
      },
      {
        "Id": "dc4cf069-8a7d-4bd4-a9f2-4efb4ec26a3c",
        "FileName": "UIAutomation.0.8.0.sources.zip",
        "Url": "./11/dc4cf069-8a7d-4bd4-a9f2-4efb4ec26a3c",
        "Type": "Source Code",
        "UploadDate": "2012-09-21T09:54:37.543-07:00"
      },
      {
        "Id": "4d6bc476-1e79-4621-bb2b-e6fa1c9c2fa2",
        "FileName": "UIAutomation.0.8.0.samples.zip",
        "Url": "./11/4d6bc476-1e79-4621-bb2b-e6fa1c9c2fa2",
        "Type": "Example",
        "UploadDate": "2012-09-21T09:54:37.607-07:00"
      }
    ]
  },
  {
    "Id": "12",
    "Name": "UIAutomation 0.8.0 Preview 5",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces\n! Metro UI testing:\n!! (P1) unattended runs of scripts\nUIARunner.exe is a utility that runs your PowerShell scripts from GUI as well as from command-line. Regarding unattended runs, UIARunner requires at least one file: the script you are running.\nNonetheless, there is also the possibility to use a 'profile' or 'autoexec' file (functioning similarly to autoexec.bat in elderly versions of Windows or the auto_open macro in MS EXcel) called UIARunner.ps1. Package includes the file, allowing you to run scripts as soon as you downloaded the package.\nThe command-line is :\nUIARunner .\\script1.ps1\nor\nUIARunner C:\\{\"[\"}path{\"]\"}\\script2.ps1\nThe test results are stored to the UIARunner_report.csv file in the folder of the application.\n!! (P2) bug fix in UIARunner\n!! (P3) bug fix in UIARunner\n{\" \"}\n!! (R) improvements to code generation\n\n{\" \"}\n! Windows UIAutomation:\n!! (P5) bugfix\n* if a control is not found by MS UI Automation, search by Win32 API returns all the controls with handles (fixed)\n* [UIAutomation.Preferences]::AfterFailTurboTimeout was passed to the release not working (because of the tight release schedule) - fixed\n!! (P5) speeding up the test suite if a control's gone\nThe -IsCritical parameter tells the test that if a Get- or Wait- cmdlet fails, the default timeout will be set to the [UIAutomation.Preferences]::AfterFailTurboTimeout value and tests will work faster unitl a control or a window will be get successfully.\n!! (P4) output as a collection\nGet-UIAWindow and Get-UIA[ControlType] cmdlets return all objects that match the condition (-Name, -Class, and/or -AutomationId)\n!! (P4) the Search- cmdlets are *switched off*\nThe Search-UIAControl and Search-UIAWindow cmdlets are now obsolete and hidden from the public. Consider using Get-UIAWindow and Get-UIA[ControlType] instead. If you need them back, please explain the need in the forum.\n!! (P1) automated test result generation\nEach cmdlet reports the result as a test case\nif parameter {\"[\"}UIAutomation.Preferences{\"]\"}::EveryCmdletAsTestResult is set to $true\n{\" \"}\n!! (P1) UIARunner in the graphical mode shows the test results\n- (P2) UIARunner shows date/time, status, name of a test result, line number, pipeline position, error message and the path to a screenshot if available\n!! (P1) UIARunner in the graphical mode generates the same report as in the command-line mode\n!! (P2) UIAutomation, UIARunner, UIAutomaitonSpy now can display two squares over controls (over the control of interest and over its parent) what should help the operator to understand the hierachy of controls\n!! (P2) UIAutomationSpy reads autoconfig script\n- UIAutomationSpy read the UIAAutomaitonSpy.ps1 file if it's represented in the application's folder. The file is the same as UIARunner.ps1 and effective for running scripts from the Script tab\n{\" \"}\n! the satellite product TMX\n!! (R) new reports\n\n{\" \"}\n!! (P1) new sorting cmdlets\nnow return test results, test scenarios, test suites sorted by\n- date/time (test results)\n- time spent (test suites, test scenarios, test results)\n- (R) the last change date/time (test suites, test scenarios)\n- Id (test suites, test scenarios, test results)\n- Name (test suites, test scenarios, test results)\n- Pass rate, i.e. pass/all ratio (test suites, test scenarios)\n- Fail rate, i.e. fail/all ratio (test suites, test scenarios)\nand filtered by the following conditions:\n- name (test suites, test scenarios, test results)\n- passed (test suites, test scenarios, test results)\n- failed (test suites, test scenarios, test results)\n- not tested (test suites, test scenarios, test results)\n- known issue (test suites, test scenarios, test results)\n- (R) date/time\n- (R) time spent\n- (R) test result Id, scenario Id, suite Id\n- (R) top N\nSearch-TMXTestSuite\nSearch-TMXTestScenario\nSearch-TMXTestResult\n{\" \"}\n!! (R) work with TFS Express 2011\n\n{\" \"}\nP1 == Preview1\nP2 == Preview2\nP3 == Preview3\nP4 == Preview4\nP5 == Preview5\nR == Release",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-08-31T14:35:42.057-07:00",
    "Files": [
      {
        "Id": "b6b7434d-24f6-45ea-a417-53683ac23e93",
        "FileName": "UIAutomation.0.8.0P5.NET35.zip",
        "Url": "./12/b6b7434d-24f6-45ea-a417-53683ac23e93",
        "Type": "Application",
        "UploadDate": "2012-08-31T14:35:19.54-07:00"
      },
      {
        "Id": "683c5a70-3a54-4311-953d-40476b0c223d",
        "FileName": "UIAutomation.0.8.0P5.NET40.zip",
        "Url": "./12/683c5a70-3a54-4311-953d-40476b0c223d",
        "Type": "Application",
        "UploadDate": "2012-08-31T14:35:19.587-07:00"
      },
      {
        "Id": "c500ccc6-8ac2-4ab0-911b-4f66ec74a4c1",
        "FileName": "UIAutomation.0.8.0P5.for.Metro.testing.zip",
        "Url": "./12/c500ccc6-8ac2-4ab0-911b-4f66ec74a4c1",
        "Type": "Application",
        "UploadDate": "2012-08-31T14:35:19.62-07:00"
      },
      {
        "Id": "754a730e-8c05-4e96-ad4d-a6211c6514d1",
        "FileName": "UIAutomation.0.8.0P5.sources.zip",
        "Url": "./12/754a730e-8c05-4e96-ad4d-a6211c6514d1",
        "Type": "Source Code",
        "UploadDate": "2012-08-31T14:35:19.777-07:00"
      },
      {
        "Id": "eba5ad13-6167-44d0-bc89-b2b7a3097a98",
        "FileName": "UIAutomation.0.8.0P5.samples.zip",
        "Url": "./12/eba5ad13-6167-44d0-bc89-b2b7a3097a98",
        "Type": "Example",
        "UploadDate": "2012-08-31T14:35:19.823-07:00"
      }
    ]
  },
  {
    "Id": "13",
    "Name": "UIAutomation 0.8.0 Preview 4",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces\n! Metro UI testing:\n!! (P1) unattended runs of scripts\nUIARunner.exe is a utility that runs your PowerShell scripts from GUI as well as from command-line. Regarding unattended runs, UIARunner requires at least one file: the script you are running.\nNonetheless, there is also the possibility to use a 'profile' or 'autoexec' file (functioning similarly to autoexec.bat in elderly versions of Windows or the auto_open macro in MS EXcel) called UIARunner.ps1. Package includes the file, allowing you to run scripts as soon as you downloaded the package.\nThe command-line is :\nUIARunner .\\script1.ps1\nor\nUIARunner C:\\{\"[\"}path{\"]\"}\\script2.ps1\nThe test results are stored to the UIARunner_report.csv file in the folder of the application.\n!! (P2) bug fix in UIARunner\n!! (P3) bug fix in UIARunner\n{\" \"}\n!! (R) improvements to code generation\n\n{\" \"}\n! Windows UIAutomation:\n!! (P4) output as a collection\nGet-UIAWindow and Get-UIA[ControlType] cmdlets return all objects that match the condition (-Name, -Class, and/or -AutomationId)\n!! (P4) the Search- cmdlets are *switched off*\nThe Search-UIAControl and Search-UIAWindow cmdlets are now obsolete and hidden from the public. Consider using Get-UIAWindow and Get-UIA[ControlType] instead. If you need them back, please explain the need in the forum.\n!! (P1) automated test result generation\nEach cmdlet reports the result as a test case\nif parameter {\"[\"}UIAutomation.Preferences{\"]\"}::EveryCmdletAsTestResult is set to $true\n{\" \"}\n!! (P1) UIARunner in the graphical mode shows the test results\n- (P2) UIARunner shows date/time, status, name of a test result, line number, pipeline position, error message and the path to a screenshot if available\n!! (P1) UIARunner in the graphical mode generates the same report as in the command-line mode\n!! (P2) UIAutomation, UIARunner, UIAutomaitonSpy now can display two squares over controls (over the control of interest and over its parent) what should help the operator to understand the hierachy of controls\n!! (P2) UIAutomationSpy reads autoconfig script\n- UIAutomationSpy read the UIAAutomaitonSpy.ps1 file if it's represented in the application's folder. The file is the same as UIARunner.ps1 and effective for running scripts from the Script tab\n{\" \"}\n! the satellite product TMX\n!! (R) new reports\n\n{\" \"}\n!! (P1) new sorting cmdlets\nnow return test results, test scenarios, test suites sorted by\n- date/time (test results)\n- time spent (test suites, test scenarios, test results)\n- (R) the last change date/time (test suites, test scenarios)\n- Id (test suites, test scenarios, test results)\n- Name (test suites, test scenarios, test results)\n- Pass rate, i.e. pass/all ratio (test suites, test scenarios)\n- Fail rate, i.e. fail/all ratio (test suites, test scenarios)\nand filtered by the following conditions:\n- name (test suites, test scenarios, test results)\n- passed (test suites, test scenarios, test results)\n- failed (test suites, test scenarios, test results)\n- not tested (test suites, test scenarios, test results)\n- known issue (test suites, test scenarios, test results)\n- (R) date/time\n- (R) time spent\n- (R) test result Id, scenario Id, suite Id\n- (R) top N\nSearch-TMXTestSuite\nSearch-TMXTestScenario\nSearch-TMXTestResult\n{\" \"}\n!! (R) work with TFS Express 2011\n\n{\" \"}\nP1 == Preview1\nP2 == Preview2\nP3 == Preview3\nP4 == Preview4\nR == Release",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-08-28T14:03:51.84-07:00",
    "Files": [
      {
        "Id": "2366c280-0a12-4029-8fc4-60b416b4236e",
        "FileName": "UIAutomation.0.8.0P4.NET35.zip",
        "Url": "./13/2366c280-0a12-4029-8fc4-60b416b4236e",
        "Type": "Application",
        "UploadDate": "2012-08-28T14:03:31.103-07:00"
      },
      {
        "Id": "d9032bf9-7f1f-4bc2-9e36-6659407ff951",
        "FileName": "UIAutomation.0.8.0P4.NET40.zip",
        "Url": "./13/d9032bf9-7f1f-4bc2-9e36-6659407ff951",
        "Type": "Application",
        "UploadDate": "2012-08-28T14:03:31.167-07:00"
      },
      {
        "Id": "7a48a633-c4e7-47cc-b732-5a4953b03bbf",
        "FileName": "UIAutomation.0.8.0P4.for.Metro.testing.zip",
        "Url": "./13/7a48a633-c4e7-47cc-b732-5a4953b03bbf",
        "Type": "Application",
        "UploadDate": "2012-08-28T14:03:31.23-07:00"
      },
      {
        "Id": "b74883ee-2927-42a4-b007-a91cb6644602",
        "FileName": "UIAutomation.0.8.0P4.sources.zip",
        "Url": "./13/b74883ee-2927-42a4-b007-a91cb6644602",
        "Type": "Source Code",
        "UploadDate": "2012-08-28T14:03:31.307-07:00"
      },
      {
        "Id": "82b901fc-4212-4e03-a2d0-9d918c67584a",
        "FileName": "UIAutomation.0.8.0P4.samples.zip",
        "Url": "./13/82b901fc-4212-4e03-a2d0-9d918c67584a",
        "Type": "Documentation",
        "UploadDate": "2012-08-28T14:03:31.353-07:00"
      }
    ]
  },
  {
    "Id": "14",
    "Name": "UIAutomation 0.8.0 Preview 3",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces\n! Metro UI testing:\n!! (P1) unattended runs of scripts\nUIARunner.exe is a utility that runs your PowerShell scripts from GUI as well as from command-line. Regarding unattended runs, UIARunner requires at least one file: the script you are running.\nNonetheless, there is also the possibility to use a 'profile' or 'autoexec' file (functioning similarly to autoexec.bat in elderly versions of Windows or the auto_open macro in MS EXcel) called UIARunner.ps1. Package includes the file, allowing you to run scripts as soon as you downloaded the package.\nThe command-line is :\nUIARunner .\\script1.ps1\nor\nUIARunner C:\\{\"[\"}path{\"]\"}\\script2.ps1\nThe test results are stored to the UIARunner_report.csv file in the folder of the application.\n!! (P2) bug fix in UIARunner\n!! (P3) bug fix in UIARunner\n{\" \"}\n!! (R) improvements to code generation\n\n{\" \"}\n! Windows UIAutomation:\n!! (P1) automated test result generation\nEach cmdlet reports the result as a test case\nif parameter {\"[\"}UIAutomation.Preferences{\"]\"}::EveryCmdletAsTestResult is set to $true\n{\" \"}\n!! (P1) UIARunner in the graphical mode shows the test results\n- (P2) UIARunner shows date/time, status, name of a test result, line number, pipeline position, error message and the path to a screenshot if available\n!! (P1) UIARunner in the graphical mode generates the same report as in the command-line mode\n!! (P2) UIAutomation, UIARunner, UIAutomaitonSpy now can display two squares over controls (over the control of interest and over its parent) what should help the operator to understand the hierachy of controls\n!! (P2) UIAutomationSpy reads autoconfig script\n- UIAutomationSpy read the UIAAutomaitonSpy.ps1 file if it's represented in the application's folder. The file is the same as UIARunner.ps1 and effective for running scripts from the Script tab\n{\" \"}\n! the satellite product TMX\n!! (R) new reports\n\n{\" \"}\n!! (P1) new sorting cmdlets\nnow return test results, test scenarios, test suites sorted by\n- date/time (test results)\n- time spent (test suites, test scenarios, test results)\n- Id (test suites, test scenarios, test results)\n- Name (test suites, test scenarios, test results)\n- Pass rate, i.e. pass/all ratio (test suites, test scenarios)\n- Fail rate, i.e. fail/all ratio (test suites, test scenarios)\nand filtered by the following conditions:\n- name (test suites, test scenarios, test results)\n- passed (test suites, test scenarios, test results)\n- failed (test suites, test scenarios, test results)\n- not tested (test suites, test scenarios, test results)\n- known issue (test suites, test scenarios, test results)\n- (R) date/time\n- (R) time spent\n- (R) test result Id, scenario Id, suite Id\n- (R) top N\nSearch-TMXTestSuite\nSearch-TMXTestScenario\nSearch-TMXTestResult\n{\" \"}\n!! (R) work with TFS EXpress 2011\n\n{\" \"}\nP1 == Preview1\nP2 == Preview2\nP3 == Preview3\nR == Release",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-07-16T13:28:06.117-07:00",
    "Files": [
      {
        "Id": "1daa4d3f-16be-4097-ba46-ffe6759f27e3",
        "FileName": "UIAutomation.0.8.0P3.NET35.zip",
        "Url": "./14/1daa4d3f-16be-4097-ba46-ffe6759f27e3",
        "Type": "Application",
        "UploadDate": "2012-07-13T11:28:05.013-07:00"
      },
      {
        "Id": "902cae42-c360-49f1-9d7f-395d3ba94cbe",
        "FileName": "UIAutomation.0.8.0P3.NET40.zip",
        "Url": "./14/902cae42-c360-49f1-9d7f-395d3ba94cbe",
        "Type": "Application",
        "UploadDate": "2012-07-13T11:28:05.043-07:00"
      },
      {
        "Id": "83f5d06f-b864-4bdf-bcb9-2dc2a30d96f4",
        "FileName": "UIAutomation.0.8.0P3.for.Metro.testing.zip",
        "Url": "./14/83f5d06f-b864-4bdf-bcb9-2dc2a30d96f4",
        "Type": "Application",
        "UploadDate": "2012-07-13T11:28:05.043-07:00"
      },
      {
        "Id": "7ba0d52e-4f10-4e8c-8264-76d5981800ef",
        "FileName": "UIAutomation.0.8.0P3.samples.zip",
        "Url": "./14/7ba0d52e-4f10-4e8c-8264-76d5981800ef",
        "Type": "Example",
        "UploadDate": "2012-07-13T11:28:05.077-07:00"
      },
      {
        "Id": "5d80e7df-d637-4ac6-9811-2fe05fd2fe01",
        "FileName": "UIAutomation.0.8.0P3.sources.zip",
        "Url": "./14/5d80e7df-d637-4ac6-9811-2fe05fd2fe01",
        "Type": "Application",
        "UploadDate": "2012-07-13T11:28:05.107-07:00"
      },
      {
        "Id": "52cf4726-2259-4718-a45a-392344f7d1e6",
        "FileName": "MetroUISampleScriptTravel2.zip",
        "Url": "./14/52cf4726-2259-4718-a45a-392344f7d1e6",
        "Type": "Example",
        "UploadDate": "2012-07-13T13:40:04.663-07:00"
      },
      {
        "Id": "74a30440-d315-4e41-b1ff-2f78d0af4ff8",
        "FileName": "UIAutomation.0.8.0P3Plus.for.Metro.testing.NET35.zip",
        "Url": "./14/74a30440-d315-4e41-b1ff-2f78d0af4ff8",
        "Type": "Application",
        "UploadDate": "2012-07-16T13:27:45.397-07:00"
      }
    ]
  },
  {
    "Id": "15",
    "Name": "UIAutomation 0.8.0 Preview 2",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces\n! Metro UI testing:\n!! (P1) unattended runs of scripts\nUIARunner.exe is a utility that runs your PowerShell scripts from GUI as well as from command-line. Regarding unattended runs, UIARunner requires at least one file: the script you are running.\nNonetheless, there is also the possibility to use a 'profile' or 'autoexec' file (functioning similarly to autoexec.bat in elderly versions of Windows or the auto_open macro in MS EXcel) called UIARunner.ps1. Package includes the file, allowing you to run scripts as soon as you downloaded the package.\nThe command-line is :\nUIARunner .\\script1.ps1\nor\nUIARunner C:\\{\"[\"}path{\"]\"}\\script2.ps1\nThe test results are stored to the UIARunner_report.csv file in the folder of the application.\n!! (P2) bug fix in UIARunner\n{\" \"}\n!! (P3) improvements to code generation\n\n{\" \"}\n! Windows UIAutomation:\n!! (P1) automated test result generation\nEach cmdlet reports the result as a test case\nif parameter {\"[\"}UIAutomation.Preferences{\"]\"}::EveryCmdletAsTestResult is set to $true\n{\" \"}\n!! (P1) UIARunner in the graphical mode shows the test results\n- (P2) UIARunner shows date/time, status, name of a test result, line number, pipeline position, error message and the path to a screenshot if available\n!! (P1) UIARunner in the graphical mode generates the same report as in the command-line mode\n!! (P2) UIAutomation, UIARunner, UIAutomaitonSpy now can display two squares over controls (over the control of interest and over its parent) what should help the operator to understand the hierachy of controls\n!! (P2) UIAutomationSpy reads autoconfig script\n- UIAutomationSpy read the UIAAutomaitonSpy.ps1 file if it's represented in the application's folder. The file is the same as UIARunner.ps1 and effective for running scripts from the Script tab\n{\" \"}\n! the satellite product TMX\n!! (P3) new reports\n\n{\" \"}\n!! (P1) new sorting cmdlets\nnow return test results, test scenarios, test suites sorted by\n- date/time (test results)\n- time spent (test suites, test scenarios, test results)\n- Id (test suites, test scenarios, test results)\n- Name (test suites, test scenarios, test results)\n- Pass rate, i.e. pass/all ratio (test suites, test scenarios)\n- Fail rate, i.e. fail/all ratio (test suites, test scenarios)\nand filtered by the following conditions:\n- name (test suites, test scenarios, test results)\n- passed (test suites, test scenarios, test results)\n- failed (test suites, test scenarios, test results)\n- not tested (test suites, test scenarios, test results)\n- known issue (test suites, test scenarios, test results)\n- (P3) date/time\n- (P3) time spent\n- (P3) test result Id, scenario Id, suite Id\n- (P3) top N\nSearch-TMXTestSuite\nSearch-TMXTestScenario\nSearch-TMXTestResult\n{\" \"}\n!! (P3) work with TFS EXpress 2011\n\n{\" \"}\nP1 == Preview1\nP2 == Preview2\nP3 == Preview3\nR == Release",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-07-12T14:54:50.33-07:00",
    "Files": [
      {
        "Id": "3406c6d1-ea00-4184-8306-14314816ecec",
        "FileName": "UIAutomation.0.8.0P2.NET35.zip",
        "Url": "./15/3406c6d1-ea00-4184-8306-14314816ecec",
        "Type": "Application",
        "UploadDate": "2012-07-12T14:54:33.78-07:00"
      },
      {
        "Id": "94f476d8-06f3-465a-96b9-b3efdf8b370b",
        "FileName": "UIAutomation.0.8.0P2.NET40.zip",
        "Url": "./15/94f476d8-06f3-465a-96b9-b3efdf8b370b",
        "Type": "Application",
        "UploadDate": "2012-07-12T14:54:33.827-07:00"
      },
      {
        "Id": "4a6272a3-259e-428b-93d4-10e7f05b69f5",
        "FileName": "UIAutomation.0.8.0P2.for.Metro.testing.zip",
        "Url": "./15/4a6272a3-259e-428b-93d4-10e7f05b69f5",
        "Type": "Application",
        "UploadDate": "2012-07-12T14:54:33.86-07:00"
      },
      {
        "Id": "f1e8e01f-3a82-431f-a4a5-7b370ea30b48",
        "FileName": "UIAutomation.0.8.0P2.samples.zip",
        "Url": "./15/f1e8e01f-3a82-431f-a4a5-7b370ea30b48",
        "Type": "Example",
        "UploadDate": "2012-07-12T14:54:33.89-07:00"
      },
      {
        "Id": "7705acaf-0fff-4131-8bac-fc7d741b13c8",
        "FileName": "UIAutomation.0.8.0P2.sources.zip",
        "Url": "./15/7705acaf-0fff-4131-8bac-fc7d741b13c8",
        "Type": "Source Code",
        "UploadDate": "2012-07-12T14:54:33.92-07:00"
      }
    ]
  },
  {
    "Id": "16",
    "Name": "UIAutomation 0.8.0 Preview 1",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces\n! Metro UI testing:\n!! (P1) unattended runs of scripts\nUIARunner.exe is a utility that runs your PowerShell scripts from GUI as well as from command-line. Regarding unattended runs, UIARunner requires at least one file: the script you are running.\nNonetheless, there is also the possibility to use a 'profile' or 'autoexec' file (functioning similarly to autoexec.bat in elderly versions of Windows or the auto_open macro in MS EXcel) called UIARunner.ps1. Package includes the file, allowing you to run scripts as soon as you downloaded the package.\nThe command-line is :\nUIARunner .\\script1.ps1\nor\nUIARunner C:\\{\"[\"}path{\"]\"}\\script2.ps1\nThe test results are stored to the UIARunner_report.csv file in the folder of the applicaiton.\n{\" \"}\n!! (P2) improvements to code generation\n\n{\" \"}\n! Windows UIAutomation:\n!! (P1) automated test result generation\nEach cmdlet reports the result as a test case\nif parameter {\"[\"}UIAutomation.Preferences{\"]\"}::EveryCmdletAsTestResult is set to $true\n{\" \"}\n!! (P1) UIARunner in the graphical mode shows the test results\n- (P2) UIARunner shows date/time, status, name of a test result, line number, pipeline position, error message and the path to a screenshot if available\n!! (P1) UIARunner in the graphical mode generates the same report as in the command-line mode\n!! (P2) UIAutomation, UIARunner, UIAutomaitonSpy now can display two squares over controls (over the control of interest and over its parent) what should help the operator to understand the hierachy of controls\n{\" \"}\n! the satellite product TMX\n!! (P2) new reports\n\n{\" \"}\n!! (P1) new sorting cmdlets\nnow return test results, test scenarios, test suites sorted by\n- date/time (test results)\n- time spent (test suites, test scenarios, test results)\n- Id (test suites, test scenarios, test results)\n- Name (test suites, test scenarios, test results)\n- Pass rate, i.e. pass/all ratio (test suites, test scenarios)\n- Fail rate, i.e. fail/all ratio (test suites, test scenarios)\nand filtered by the following conditions:\n- name (test suites, test scenarios, test results)\n- passed (test suites, test scenarios, test results)\n- failed (test suites, test scenarios, test results)\n- not tested (test suites, test scenarios, test results)\n- known issue (test suites, test scenarios, test results)\n- (P2) date/time\n- (P2) time spent\n- (P2) test result Id, scenario Id, suite Id\n- (P2) top N\nSearch-TMXTestSuite\nSearch-TMXTestScenario\nSearch-TMXTestResult\n{\" \"}\n!! (P2) work with TFS EXpress 2011\n\n{\" \"}\nP1 == Preview1\nP2 == Preview2\nR == Release",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-07-11T08:59:33.307-07:00",
    "Files": [
      {
        "Id": "61e32766-67e0-4f05-a611-d9d9529f9c71",
        "FileName": "UIAutomation.0.8.0P1.NET35.zip",
        "Url": "./16/61e32766-67e0-4f05-a611-d9d9529f9c71",
        "Type": "Application",
        "UploadDate": "2012-07-09T13:51:10.157-07:00"
      },
      {
        "Id": "df68e07c-1a6c-4b22-bbed-6f0c3a6c5684",
        "FileName": "UIAutomation.0.8.0P1.NET40.zip",
        "Url": "./16/df68e07c-1a6c-4b22-bbed-6f0c3a6c5684",
        "Type": "Application",
        "UploadDate": "2012-07-09T13:51:10.22-07:00"
      },
      {
        "Id": "1321861d-bd18-43f0-ae22-4b92c0dca71f",
        "FileName": "UIAutomation.0.8.0P1.samples.zip",
        "Url": "./16/1321861d-bd18-43f0-ae22-4b92c0dca71f",
        "Type": "Example",
        "UploadDate": "2012-07-09T13:51:10.267-07:00"
      },
      {
        "Id": "59b07e45-8771-44c9-910c-e98c45dbd924",
        "FileName": "UIAutomation.0.8.0P1.sources.zip",
        "Url": "./16/59b07e45-8771-44c9-910c-e98c45dbd924",
        "Type": "Source Code",
        "UploadDate": "2012-07-09T13:51:10.297-07:00"
      },
      {
        "Id": "2a791bda-6808-48a1-91df-a5f101074bae",
        "FileName": "UIAutomation.0.8.0P1.for.Metro.testing.zip",
        "Url": "./16/2a791bda-6808-48a1-91df-a5f101074bae",
        "Type": "Application",
        "UploadDate": "2012-07-09T14:16:15.45-07:00"
      }
    ]
  },
  {
    "Id": "17",
    "Name": "UIAutomation 0.7.12",
    "DevelopmentStatus": "Beta",
    "Description": "This release is, in fact, a beta of 0.8.0. If no bugs were introduced, it will be soon uploaded as 0.8.0.\n\nThis release introduces\n1) three new cmdlets for *Metro UI testing*:\nShow-UIAMetroStartScreen (Win)\nShow-UIAMetroCharm (Win+C)\nShow-UIAMetroMenu (Win+Z)\nThey work without parameters\nThe Invoke-UIAHotkey cmdlet is now deprecated\n\n2) cmdlets for habitual *Windows hot keys*:\nShow-UIAStartRun (Win+R)\nShow-UIADesktop (Win+D)\nShow-UIATaskManager (Shift + Ctrl + Esc) (if you need to screenshot the task manager, for example)\nShow-UIAContextMenu (Shift+F10) (a dubious one: the focus should be set to a control you are invoking the menu for)\n\n3) *bug fix* in Wait-UIA[ControlType]IsEnabled and Wait-UIA[controlType]IsVisible cmdlets\n\n4) *bug fix* in \"Win32 click\" cmdlets: *Invoke-UIAControlClick -RightClick* didn't show up the menu unless the user moves the mouse cursor (it  wil again use PostMessage, the change was made on 20th).\n\n5) *experimental* support of *CacheRequest*:\nStart-UIACacheRequest # it also sets the [UIAutomation.Preferences]::FromCache variable\n{\"#\"} this code gets the pane and caches all the subtree below the pane\n$pane = Get-UIAWindow -n xxx | Get-UIAPane -n yyy\n$pane | Get-UIAButton -n zzz # cached element\n$pane | Get-UIARadioButton -n aaa # cached element\nStop-UIACacheRequest\nThere'll be an upcoming blog support, of course.\n\n6) the RootElement's code is cleaned out from the UIAutomationSpy code output (Code -> Control -> the lowest box).\nThe Code->Hierarchy tree shows the root element (as UIA Verify does).",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-06-25T14:18:40.2-07:00",
    "Files": [
      {
        "Id": "86728e8b-ce08-476f-a120-5b37d870040b",
        "FileName": "UIAutomation.0.7.12.NET35.zip",
        "Url": "./17/86728e8b-ce08-476f-a120-5b37d870040b",
        "Type": "Application",
        "UploadDate": "2012-06-25T14:18:29.23-07:00"
      },
      {
        "Id": "cdf3dbdb-f2fc-46da-88cc-5e10116b04c7",
        "FileName": "UIAutomation.0.7.12.NET40.zip",
        "Url": "./17/cdf3dbdb-f2fc-46da-88cc-5e10116b04c7",
        "Type": "Application",
        "UploadDate": "2012-06-25T14:18:29.263-07:00"
      },
      {
        "Id": "5245981c-26a1-47ca-b4ef-744a08f91119",
        "FileName": "UIAutomation.0.7.12.for.Metro.testing.zip",
        "Url": "./17/5245981c-26a1-47ca-b4ef-744a08f91119",
        "Type": "Application",
        "UploadDate": "2012-06-25T14:18:29.31-07:00"
      },
      {
        "Id": "12a6699e-1ba3-4150-854d-a3ba522665ac",
        "FileName": "UIAutomation.0.7.12.sources.zip",
        "Url": "./17/12a6699e-1ba3-4150-854d-a3ba522665ac",
        "Type": "Source Code",
        "UploadDate": "2012-06-25T14:18:29.34-07:00"
      },
      {
        "Id": "e1b186f3-1847-4ffa-a8f0-9b9773054855",
        "FileName": "UIAutomation.0.7.12.samples.zip",
        "Url": "./17/e1b186f3-1847-4ffa-a8f0-9b9773054855",
        "Type": "Example",
        "UploadDate": "2012-06-25T14:18:29.467-07:00"
      }
    ]
  },
  {
    "Id": "18",
    "Name": "UIAutomation 0.7.11",
    "DevelopmentStatus": "Beta",
    "Description": "This release comes with two small but useful additions.\n1) an experimental and even temporary cmdlet\nInvoke-UIAHotKey\nThecmdlet uses keyb_event (i.e. sending virtual key codes to anywhere) and supports letters, numbers, Ctrl, Alt, Shift, Win (guess why) and Enter. It will be rewritten and renamed in the future, for now this is as is.\n\nHow to use?\nInvoke-UIAHotKey -Win # to call the Start Screen\nInvoke-UIAHotKey -Win -Key c # to call the charm\nInvoke-UIAHotKey -Win -Key z # to call the app menu\n\nBye, UIASendKeys\n\n2) UIAutomationSpy displays the full hierarhy (even the topmost element you rarely will need to address) in the lower box (tab Code -> tab Control)\n\n3) UIAutomationSpy also displays the same as a tree of controls (tab Code -> tab Hierarchy)\n\nI hope it helps you deeply understand controlsthat you see on the screen.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-06-22T13:52:31.803-07:00",
    "Files": [
      {
        "Id": "140ec0a6-2be2-4851-b0fd-91214d31164c",
        "FileName": "UIAutomation.0.7.11.NET35.zip",
        "Url": "./18/140ec0a6-2be2-4851-b0fd-91214d31164c",
        "Type": "Application",
        "UploadDate": "2012-06-22T13:52:21.927-07:00"
      },
      {
        "Id": "be36d74d-5e99-45cc-a5be-c74b6a431ceb",
        "FileName": "UIAutomation.0.7.11.NET40.zip",
        "Url": "./18/be36d74d-5e99-45cc-a5be-c74b6a431ceb",
        "Type": "Application",
        "UploadDate": "2012-06-22T13:52:21.96-07:00"
      },
      {
        "Id": "bd72eb53-2cf4-42e1-a3c6-a95f135d9086",
        "FileName": "UIAutomation.0.7.11.for.Metro.testing.zip",
        "Url": "./18/bd72eb53-2cf4-42e1-a3c6-a95f135d9086",
        "Type": "Application",
        "UploadDate": "2012-06-22T13:52:21.99-07:00"
      },
      {
        "Id": "5d2001c1-4a9f-421e-879e-fde6abac7eb0",
        "FileName": "UIAutomation.0.7.11.sources.zip",
        "Url": "./18/5d2001c1-4a9f-421e-879e-fde6abac7eb0",
        "Type": "Source Code",
        "UploadDate": "2012-06-22T13:52:22.02-07:00"
      },
      {
        "Id": "cf11692a-6c31-4833-8635-0ba05565da9c",
        "FileName": "UIAutomation.0.7.11.samples.zip",
        "Url": "./18/cf11692a-6c31-4833-8635-0ba05565da9c",
        "Type": "Example",
        "UploadDate": "2012-06-22T13:52:22.083-07:00"
      }
    ]
  },
  {
    "Id": "19",
    "Name": "UIAutomation 0.7.10",
    "DevelopmentStatus": "Beta",
    "Description": "This release has the following functionality added:\n- support for ScrollPattern\nInvoke-UIA[ControlType]Scroll\n- support for ScrollItemPattern\nInvoke-UIA[ControlType]ScrollItem\n- Ctrl+C in now supported in Get- and Wait- cmdlets\n- the Wait-UIA[ControlType]IsVisible cmdlets\n\nNothing changed in the 'Metro UI testing' package except that the UIASendKeys added to it.\n\nA couple of samples on the topic 'how to test help files' is added to the samples package.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-06-21T08:55:27.12-07:00",
    "Files": [
      {
        "Id": "64b3c3e5-8945-43f6-8a67-2e8b32699614",
        "FileName": "UIAutomation.0.7.10.NET35.zip",
        "Url": "./19/64b3c3e5-8945-43f6-8a67-2e8b32699614",
        "Type": "Application",
        "UploadDate": "2012-06-20T06:57:34.913-07:00"
      },
      {
        "Id": "721850f0-c192-4d33-9212-63c675941a63",
        "FileName": "UIAutomation.0.7.10.sources.zip",
        "Url": "./19/721850f0-c192-4d33-9212-63c675941a63",
        "Type": "Source Code",
        "UploadDate": "2012-06-20T06:57:35.07-07:00"
      },
      {
        "Id": "43dbb1d1-321c-42a9-a996-96c911e209e2",
        "FileName": "UIAutomation.0.7.10.samples.zip",
        "Url": "./19/43dbb1d1-321c-42a9-a996-96c911e209e2",
        "Type": "Example",
        "UploadDate": "2012-06-20T06:57:35.18-07:00"
      },
      {
        "Id": "e4a56cde-6af9-4f5f-9084-4d000ef15e71",
        "FileName": "UIAutomation.0.7.10.NET40.zip",
        "Url": "./19/e4a56cde-6af9-4f5f-9084-4d000ef15e71",
        "Type": "Application",
        "UploadDate": "2012-06-20T07:18:44.84-07:00"
      },
      {
        "Id": "80e64104-fc4f-4790-933e-eebf51af1fac",
        "FileName": "UIAutomation.0.7.10.for.Metro.testing.zip",
        "Url": "./19/80e64104-fc4f-4790-933e-eebf51af1fac",
        "Type": "Application",
        "UploadDate": "2012-06-20T07:18:44.87-07:00"
      },
      {
        "Id": "a719658c-4cce-4345-be7c-6bbd509dd294",
        "FileName": "UIAutomation.0.7.11.b1.for.Metro.testing.zip",
        "Url": "./19/a719658c-4cce-4345-be7c-6bbd509dd294",
        "Type": "Application",
        "UploadDate": "2012-06-21T08:55:16.073-07:00"
      }
    ]
  },
  {
    "Id": "20",
    "Name": "UIAutomation 0.7.9",
    "DevelopmentStatus": "Beta",
    "Description": "This release comes to light two small features:\nthe Set-UIAControlKeys cmdlet, previously was a copy-paste of Set-UIAConrolText as there was no great idea how to do it better and cheaper,\nnow is what the Sendkeys class does.\nGet-UIA....(a control, a window, or the desktop) ... | Set-UIAControlKeys -Text \"abc\";\nThe naming of the cmdlet itself and parameters is ugly yet.\n\nUIAutomaitonSpy in the manual mode (i.e. tab Code, buttons Start/Stop) now displays the class of a control (ClassName in terms of MS UI Automation).\nThe manual mode is intended to be used as a reference to a control you are approaching to, so that the full code is still better to get through the Start-UIARecorder cmdlet.\nSome control don't have Name nor AutomationId, so that the only way to get such controls is to use the -Class parameter. In most cases -Class must not be used as it is frequently operationg system-dependent.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-06-16T02:19:04.777-07:00",
    "Files": [
      {
        "Id": "3e423267-17c2-441e-9055-8a814ddb136d",
        "FileName": "UIAutomation.0.7.9.NET35.zip",
        "Url": "./20/3e423267-17c2-441e-9055-8a814ddb136d",
        "Type": "Application",
        "UploadDate": "2012-06-14T02:32:51.76-07:00"
      },
      {
        "Id": "753d44d9-77ad-47dd-b651-c596c2b569ca",
        "FileName": "UIAutomation.0.7.9.NET40.zip",
        "Url": "./20/753d44d9-77ad-47dd-b651-c596c2b569ca",
        "Type": "Application",
        "UploadDate": "2012-06-14T02:32:51.837-07:00"
      },
      {
        "Id": "78710132-219d-4d9f-b11a-94512a30ceed",
        "FileName": "UIAutomation.0.7.9.for.Metro.testing.zip",
        "Url": "./20/78710132-219d-4d9f-b11a-94512a30ceed",
        "Type": "Application",
        "UploadDate": "2012-06-14T02:32:51.867-07:00"
      },
      {
        "Id": "17572b26-a86c-4263-b8f3-4bf244a42ea6",
        "FileName": "UIAutomation.0.7.9.sources.zip",
        "Url": "./20/17572b26-a86c-4263-b8f3-4bf244a42ea6",
        "Type": "Source Code",
        "UploadDate": "2012-06-14T02:32:51.867-07:00"
      },
      {
        "Id": "f4eff39b-160c-49b6-92eb-8814c1e41beb",
        "FileName": "UIAutomation.0.7.9.samples.zip",
        "Url": "./20/f4eff39b-160c-49b6-92eb-8814c1e41beb",
        "Type": "Example",
        "UploadDate": "2012-06-14T02:32:51.913-07:00"
      },
      {
        "Id": "d63b5a2e-9abf-456c-8f37-f7e82c77b147",
        "FileName": "UIASendKeys.0.7.9.for.Metro.testing.zip",
        "Url": "./20/d63b5a2e-9abf-456c-8f37-f7e82c77b147",
        "Type": "Application",
        "UploadDate": "2012-06-14T13:51:53.24-07:00"
      },
      {
        "Id": "1ca543a2-7fc8-46f2-8065-93fd41a7348a",
        "FileName": "HelpFilesTesting.zip",
        "Url": "./20/1ca543a2-7fc8-46f2-8065-93fd41a7348a",
        "Type": "Example",
        "UploadDate": "2012-06-16T02:18:55.887-07:00"
      }
    ]
  },
  {
    "Id": "21",
    "Name": "UIAutomation 0.7.8",
    "DevelopmentStatus": "Beta",
    "Description": "UIAutomation.dll has gotten a small fix: Save-UIAScreenshot didn't work due to changes done a couple of versions ago to parameter sets.\n\nMetro and NET40 versions: this release should work on Windows 8 Release Preview.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-06-13T11:23:04.587-07:00",
    "Files": [
      {
        "Id": "da23caab-afb3-4112-9123-296fad116d1d",
        "FileName": "UIAutomation.0.7.8.NET35.zip",
        "Url": "./21/da23caab-afb3-4112-9123-296fad116d1d",
        "Type": "Application",
        "UploadDate": "2012-06-13T09:03:00.95-07:00"
      },
      {
        "Id": "e9a51adc-8ff9-4c80-bb31-b54ecf37c062",
        "FileName": "UIAutomation.0.7.8.NET40.zip",
        "Url": "./21/e9a51adc-8ff9-4c80-bb31-b54ecf37c062",
        "Type": "Application",
        "UploadDate": "2012-06-13T09:03:00.967-07:00"
      },
      {
        "Id": "d512e8f7-3f0b-4eb2-a970-70dc08a84c29",
        "FileName": "UIAutomation.0.7.8.sources.zip",
        "Url": "./21/d512e8f7-3f0b-4eb2-a970-70dc08a84c29",
        "Type": "Source Code",
        "UploadDate": "2012-06-13T09:10:36.75-07:00"
      },
      {
        "Id": "6d286b40-5129-4b62-9287-fcb052d69954",
        "FileName": "UIAutomation.0.7.8.samples.zip",
        "Url": "./21/6d286b40-5129-4b62-9287-fcb052d69954",
        "Type": "Example",
        "UploadDate": "2012-06-13T09:10:36.86-07:00"
      },
      {
        "Id": "9caf0124-61b5-4425-9d3c-855715cddfa0",
        "FileName": "UIAutomation.0.7.8.for.Metro.testing.zip",
        "Url": "./21/9caf0124-61b5-4425-9d3c-855715cddfa0",
        "Type": "Application",
        "UploadDate": "2012-06-13T11:22:57.557-07:00"
      }
    ]
  },
  {
    "Id": "22",
    "Name": "UIAutomation 0.7.7",
    "DevelopmentStatus": "Beta",
    "Description": "This release changes nothing in UIAutomaiton.dll (except that the -WriteCurrentPattern parameter in the Start-UIARecorder cmdlet is seet to $true by default).\n\nFor testers of Metro UI applications, there is a bug fix:\na rich text control on the Script tab page has been replaced with a multiline text box.\nNow, you can edit scripts and paste the code into the text box. The preferred way to generate test code is to do steps as follows:\n1) run UIAutomaitonSpy.exe\n2) don't click Start. Instead, go to the Script tab and type in \nstart-uiarecorder -se 20\n(20 is time in seconds you are going to record)\n3) click the Run All button\n4) now you can slowely move the mouse cursor, hovering over controls, perform actions like clicks or typing in text into controls and so on.\n5) after the time you set (20 seconds in our code sample), two instances of Notepad should appear. One is for full test code, the other contains its shorter version.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-06-13T01:45:05.8-07:00",
    "Files": [
      {
        "Id": "d40ed216-7ecb-4be0-82a7-241df7b8f099",
        "FileName": "UIAutomation.0.7.7.NET35.zip",
        "Url": "./22/d40ed216-7ecb-4be0-82a7-241df7b8f099",
        "Type": "Application",
        "UploadDate": "2012-06-13T01:44:54.597-07:00"
      },
      {
        "Id": "1e2fb2bd-5e61-4db3-8dfd-62167347be6b",
        "FileName": "UIAutomation.0.7.7.NET40.zip",
        "Url": "./22/1e2fb2bd-5e61-4db3-8dfd-62167347be6b",
        "Type": "Application",
        "UploadDate": "2012-06-13T01:44:54.613-07:00"
      },
      {
        "Id": "3354b776-dd99-4924-a8cf-703621bf6047",
        "FileName": "UIAutomation.0.7.7.for.Metro.testing.zip",
        "Url": "./22/3354b776-dd99-4924-a8cf-703621bf6047",
        "Type": "Application",
        "UploadDate": "2012-06-13T01:44:54.63-07:00"
      },
      {
        "Id": "dc455c6b-74f3-4199-a1cc-13b1e87adbac",
        "FileName": "UIAutomation.0.7.7.sources.zip",
        "Url": "./22/dc455c6b-74f3-4199-a1cc-13b1e87adbac",
        "Type": "Source Code",
        "UploadDate": "2012-06-13T01:44:54.643-07:00"
      },
      {
        "Id": "8a6c48d2-8d27-40fb-85c6-bb1846981de1",
        "FileName": "UIAutomation.0.7.7.samples.zip",
        "Url": "./22/8a6c48d2-8d27-40fb-85c6-bb1846981de1",
        "Type": "Example",
        "UploadDate": "2012-06-13T01:44:54.69-07:00"
      }
    ]
  },
  {
    "Id": "23",
    "Name": "UIAutomation 0.7.6",
    "DevelopmentStatus": "Beta",
    "Description": "This release adds the ability to get a window by its name (title) via wildcard. This works only if MS UI Automation can catch the window. If MS UI Automation failed to get a window, next try is done through the FindWindow Win32 API call. It works only with exact matches (at least, in 0.7.6).\n\nIn practice, nothing is changed and only the following ability is added:\nGet-UIAWindow -Name Calc*\nis working as if you typed\nGet-UIAWindow -Name Calculator\n\nNeither process name, nor process Id :) can be wildcarded.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-06-12T23:48:12.64-07:00",
    "Files": [
      {
        "Id": "bff9d970-d257-4e71-8fc7-2ef46b8ea03c",
        "FileName": "UIAutomation.0.7.6.NET35.zip",
        "Url": "./23/bff9d970-d257-4e71-8fc7-2ef46b8ea03c",
        "Type": "Application",
        "UploadDate": "2012-06-08T08:02:33.783-07:00"
      },
      {
        "Id": "ac16940a-b3d0-41c6-9508-b2c15ca92d9a",
        "FileName": "UIAutomation.0.7.6.sources.zip",
        "Url": "./23/ac16940a-b3d0-41c6-9508-b2c15ca92d9a",
        "Type": "Source Code",
        "UploadDate": "2012-06-08T08:15:08.133-07:00"
      },
      {
        "Id": "d57521e8-c025-490b-9315-d4586b802074",
        "FileName": "UIAutomation.0.7.6.samples.zip",
        "Url": "./23/d57521e8-c025-490b-9315-d4586b802074",
        "Type": "Example",
        "UploadDate": "2012-06-08T08:15:08.197-07:00"
      },
      {
        "Id": "a054662d-bda6-48f5-9efd-2716fcaadf10",
        "FileName": "UIAutomation.0.7.6.NET40.zip",
        "Url": "./23/a054662d-bda6-48f5-9efd-2716fcaadf10",
        "Type": "Application",
        "UploadDate": "2012-06-12T14:28:29.42-07:00"
      },
      {
        "Id": "2531e926-b67d-423d-81ce-991fe03cb621",
        "FileName": "UIAutomation.0.7.6.for.Metro.testing.zip",
        "Url": "./23/2531e926-b67d-423d-81ce-991fe03cb621",
        "Type": "Application",
        "UploadDate": "2012-06-12T23:48:04.407-07:00"
      }
    ]
  },
  {
    "Id": "24",
    "Name": "UIAutomation 0.7.5",
    "DevelopmentStatus": "Beta",
    "Description": "This release shipped with the following:\n1) ability to find a control by its name through Win32 API call FindWindowEx\nfor example, \nGet-UIAWindow -Name 'some name' | Get-UIAButton -Name 'button name' -Win32\nThis is helpful in cases when there's in a window a lot of small controls like cells in the grid and UI Automation performs a very long query, searching through all the control tree. In modern applications, there are not much controls with handles, so that Win32 returns such a control quickly.\n\n2) bug fix in the Start-UIARecorder cmdlet.\n2.1) by default, NoUI and NoScriptHeader parameters are ON\n2.2) without the -WriteCurrentPattern parameter specified, no script files were generated\n\n3) UIAutomationSpy now can create a simple script and run it. This is for Metro testing, because UIAutomationSpy is floating over the Meto UI\nNOTE: this version uses a RichText control as a script editor. This means that scripts work only if they are generated or edited directrly in the rich text box. \nIf you put them to the control from outside, the control adds rich text tags and scripts may not work (PowerShell engine can't go through parsing).\nThe next verison will be using or a simple multiline text box, a free editor, for example, TextEditor from SharpDevelop.\n\n4) SORRY: samples for testing Metro applications will be a version later, I just hadn't time for it.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-06-08T02:39:16-07:00",
    "Files": [
      {
        "Id": "73674f75-60ca-44ad-a7eb-cc0ff2ddb3e9",
        "FileName": "UIAutomation.0.7.5.NET35.zip",
        "Url": "./24/73674f75-60ca-44ad-a7eb-cc0ff2ddb3e9",
        "Type": "Application",
        "UploadDate": "2012-06-08T02:37:05.963-07:00"
      },
      {
        "Id": "23bdc6d8-a812-4fa9-bd15-348c0df1d556",
        "FileName": "UIAutomation.0.7.5.for.Metro.testing.zip",
        "Url": "./24/23bdc6d8-a812-4fa9-bd15-348c0df1d556",
        "Type": "Application",
        "UploadDate": "2012-06-01T14:39:08.833-07:00"
      },
      {
        "Id": "1d333dda-aaae-4f7e-90f4-b29206f4a65a",
        "FileName": "UIAutomation.0.7.5.for.Metro.testing.zip",
        "Url": "./24/1d333dda-aaae-4f7e-90f4-b29206f4a65a",
        "Type": "Application",
        "UploadDate": "2012-06-01T15:10:34.043-07:00"
      },
      {
        "Id": "2d801d85-f9b8-4908-9138-c2d019e3b702",
        "FileName": "UIAutomaiton.0.7.5.samples.zip",
        "Url": "./24/2d801d85-f9b8-4908-9138-c2d019e3b702",
        "Type": "Example",
        "UploadDate": "2012-06-08T02:35:07.253-07:00"
      },
      {
        "Id": "886a004d-6619-4d49-b1d0-55555c21dec7",
        "FileName": "UIAutomation.0.7.5.sources.zip",
        "Url": "./24/886a004d-6619-4d49-b1d0-55555c21dec7",
        "Type": "Source Code",
        "UploadDate": "2012-06-08T02:37:05.993-07:00"
      }
    ]
  },
  {
    "Id": "25",
    "Name": "UIAutomation 0.7.4",
    "DevelopmentStatus": "Beta",
    "Description": "This is a minor release, though one interesting cmdlet is added (in strictly experimental mode):\nWait-UIAEventRaised\n\nThis is an attempt to make easy getting events that just fired and in the same thread where the PowerShell code execution is.\n\nThe idea is as:\n- get a window or get a control\n- register an event (for example, invoked, structure changed, menu opened, window opened, etc)\n- wait until the event fires\n\nTechnically, event handler stores data in the variables:\n[UIAutomation.CurrentData]::LastEventSource - current or cached control that was the $src parameters of an event\n[UIAutomation.CurrentData]::LastEventType - the string representation of an event ($e.EventId.ProgrammaticName)\n[UIAutomation.CurrentData]::LastEventInfoAdded - the boolan flag that is set when event handler got the event\n[UIAutomation.CurrentData]::LastEventArgs - $e\n\nThe Wait-UIAEventRaised cmdlet waits until an event that matches the parameters will be written into these variables and cleans up the LastEventInfoAdded variable. The cmdlet returns [UIAutomation.CurrentData]::LastEventSource, whichever state of it is (current, cached, partially cached). Otherwise, on timeout expiration it throws an exception.\n\nsee also: MenuOpenedEventAutomation03.ps1 MenuOpenedEventAutomation04.ps1\n\n\nAlso, there are new cmdlets (in order to fulfill missing pattern cmdlets):\nGet-UIA[ControlType]ToggleState returning bool\nGet-UIA[ControlType]SelectionItemState returning bool too",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-05-04T03:21:42.63-07:00",
    "Files": [
      {
        "Id": "ea64bfb3-0fa3-488c-8798-3d7df847c586",
        "FileName": "UIAutomation.0.7.4.NET35.zip",
        "Url": "./25/ea64bfb3-0fa3-488c-8798-3d7df847c586",
        "Type": "Application",
        "UploadDate": "2012-04-23T14:53:40.967-07:00"
      },
      {
        "Id": "d77ad521-e000-456f-abdf-a400aed1777f",
        "FileName": "UIAutomation.sources.0.7.4.zip",
        "Url": "./25/d77ad521-e000-456f-abdf-a400aed1777f",
        "Type": "Source Code",
        "UploadDate": "2012-04-23T14:53:41.043-07:00"
      },
      {
        "Id": "cfaa3a06-9144-49eb-802d-dfba0eca6660",
        "FileName": "UIAutomation.samples.0.7.4.zip",
        "Url": "./25/cfaa3a06-9144-49eb-802d-dfba0eca6660",
        "Type": "Example",
        "UploadDate": "2012-04-23T14:53:41.17-07:00"
      },
      {
        "Id": "fc4df2a2-0d2c-4d74-9692-1666a1e99443",
        "FileName": "UIAutomation.0.7.5.for.Metro.testing.zip",
        "Url": "./25/fc4df2a2-0d2c-4d74-9692-1666a1e99443",
        "Type": "Application",
        "UploadDate": "2012-04-27T14:36:08.43-07:00"
      },
      {
        "Id": "83d9c83e-d718-4189-9307-f03ee887aa69",
        "FileName": "UIAutomation_two_builds.zip",
        "Url": "./25/83d9c83e-d718-4189-9307-f03ee887aa69",
        "Type": "Application",
        "UploadDate": "2012-05-04T03:21:35.88-07:00"
      }
    ]
  },
  {
    "Id": "26",
    "Name": "UIAutomation 0.7.3",
    "DevelopmentStatus": "Beta",
    "Description": "Four cmdlets (Get-UIAControlNextSibling, Get-UIAControlPreviousSibling, Get-UIAControlFirstChild, Get-UIAControlLastChild) fulfilled the set of 'relatives' cmdlets.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-04-13T15:52:48.767-07:00",
    "Files": [
      {
        "Id": "86c691b8-4baa-4bdb-a992-41bac3dd16fb",
        "FileName": "UIAutomation.0.7.3.zip",
        "Url": "./26/86c691b8-4baa-4bdb-a992-41bac3dd16fb",
        "Type": "Application",
        "UploadDate": "2012-04-13T15:12:56.917-07:00"
      },
      {
        "Id": "0be4d3fe-956c-46fa-ae64-ee704fd730c3",
        "FileName": "UIAutomation.sources.0.7.3.zip",
        "Url": "./26/0be4d3fe-956c-46fa-ae64-ee704fd730c3",
        "Type": "Source Code",
        "UploadDate": "2012-04-13T15:12:56.977-07:00"
      },
      {
        "Id": "fbbbdb09-f8f3-458b-97da-7f55abeb87a7",
        "FileName": "UIAutomation.samples.0.7.3.zip",
        "Url": "./26/fbbbdb09-f8f3-458b-97da-7f55abeb87a7",
        "Type": "Example",
        "UploadDate": "2012-04-13T15:12:57.057-07:00"
      },
      {
        "Id": "5b2691ad-8199-4ca0-b307-8fc52c5498ab",
        "FileName": "UIAutomation.0.7.3.NET40.zip",
        "Url": "./26/5b2691ad-8199-4ca0-b307-8fc52c5498ab",
        "Type": "Application",
        "UploadDate": "2012-04-13T15:52:44.423-07:00"
      }
    ]
  },
  {
    "Id": "27",
    "Name": "UIAutomation 0.7.2",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces a new way to search: the wildcard search.\nIn most situations, this new option is transparent to user: all the previous code should continue working as earlier.\n\nThe goal of this addition, along with added earlier abilities to find windows and controls through FindWindow/FindWindowEx API calls, or timeouts the Get- and Wait- cmdlets are born with, is to continuously eliminate fragility of tests.\n\nOne of the most serious problems, especially developers are independent form testers, is handling inexplicable changes in AUT's UI. There may be changed almost everything, from the window caption to controls' automation Ids.\nTo lose a good bunch of test results only because someone changed a title (name) of a control or a window? The nightmare we can possibly avoid.\nSince now, you can simply use wildcards (that is almost free text search as 'Connect*project' may mean 'Connect to Project' or 'Connect to a new project') is Name, AutmationId, and Class parameters.\nPlease notice, however, that the current implementation returns the first match, whatever it is: the name, or automation id, or class name.\n\nShortly, the search (Get-) for a control works now in the following sequence:\n1. regular search (exact match)\n2. wildcard search\n3. FindWindow/FindWindowEx search\n4. OnSleep actions if any\n5. sleep interval\n1-5 again and again, until timeout expires or one or searches returns a coveted thing\nThe search for a window is somewhat simpler and never includes recursion (all the windows, desktop menus or other elements and whatever may be a child of the RootElement is subject to search only among the immediate children of the RootElement).\n\nIf you are prefer using only specific type(s) of search (for instance, you don't need to use FindWindowEx or your application has not a lot of controls, so that your choice is the wildcard search whenever you search for a control), there are three constants (that further will be moved to profiles);\n[UIAutomation.Preferences]::DisableExactSearch\n[UIAutomation.Preferences]::DisableWildCardSearch\n[UIAutomation.Preferences]::DisableWin32Search\n\nAlso, the default timeout is set to 5000 (5 seconds).",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-04-12T01:26:40.883-07:00",
    "Files": [
      {
        "Id": "70c71f79-7e18-48f4-825d-1d593f222c52",
        "FileName": "UIAutomation.0.7.2.zip",
        "Url": "./27/70c71f79-7e18-48f4-825d-1d593f222c52",
        "Type": "Application",
        "UploadDate": "2012-04-12T01:25:29.7-07:00"
      },
      {
        "Id": "7195bf43-95e4-4945-8a14-c32e0a4779fd",
        "FileName": "UIAutomation.sources.0.7.2.zip",
        "Url": "./27/7195bf43-95e4-4945-8a14-c32e0a4779fd",
        "Type": "Source Code",
        "UploadDate": "2012-04-12T01:25:29.717-07:00"
      },
      {
        "Id": "f10ba10b-d3bc-40f5-b922-a9e86e9540b0",
        "FileName": "UIAutomation.samples.0.7.2.zip",
        "Url": "./27/f10ba10b-d3bc-40f5-b922-a9e86e9540b0",
        "Type": "Example",
        "UploadDate": "2012-04-12T01:25:29.797-07:00"
      }
    ]
  },
  {
    "Id": "28",
    "Name": "UIAutomation 0.7.1",
    "DevelopmentStatus": "Beta",
    "Description": "added a new cmdlet Search-UIAControl:\nSearch-UIAControl -Name N?xt*\nSearch-UIAControl -ControlType button -Name *nish\nSearch-UIAControl -ControlType button, menubar -Name A*\n\nUIAutomaitonSpy can store code for the control the mouse is hovering over to the clipboard.\n\nSamples have also been refreshed.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-04-10T02:17:39.317-07:00",
    "Files": [
      {
        "Id": "944bb481-05d0-42ec-8cf5-3b640e9e77ac",
        "FileName": "UIAutomation.0.7.1.zip",
        "Url": "./28/944bb481-05d0-42ec-8cf5-3b640e9e77ac",
        "Type": "Application",
        "UploadDate": "2012-04-08T00:21:57.537-07:00"
      },
      {
        "Id": "8f0365b3-0b56-484a-9c18-ad5249048351",
        "FileName": "UIAutomation.sources.0.7.1.zip",
        "Url": "./28/8f0365b3-0b56-484a-9c18-ad5249048351",
        "Type": "Source Code",
        "UploadDate": "2012-04-08T00:21:57.583-07:00"
      },
      {
        "Id": "79a24243-78aa-4b2c-b977-1bcc6a90a74e",
        "FileName": "UIAutomation.samples.0.7.1.zip",
        "Url": "./28/79a24243-78aa-4b2c-b977-1bcc6a90a74e",
        "Type": "Example",
        "UploadDate": "2012-04-10T02:17:37.1-07:00"
      }
    ]
  },
  {
    "Id": "29",
    "Name": "UIAutomation 0.7.0",
    "DevelopmentStatus": "Beta",
    "Description": "The number of changes incorporated into the module counted to the new major release.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-04-02T11:53:35.64-07:00",
    "Files": [
      {
        "Id": "3bfc455d-a488-4c56-bd3d-d3d6a79d9f52",
        "FileName": "UIAutomation.0.7.0.zip",
        "Url": "./29/3bfc455d-a488-4c56-bd3d-d3d6a79d9f52",
        "Type": "Application",
        "UploadDate": "2012-04-02T11:53:34.06-07:00"
      },
      {
        "Id": "3ce97697-4026-4646-948e-8c7a74f23f18",
        "FileName": "UIAutomation.sources.0.7.0.zip",
        "Url": "./29/3ce97697-4026-4646-948e-8c7a74f23f18",
        "Type": "Source Code",
        "UploadDate": "2012-04-02T11:53:34.107-07:00"
      }
    ]
  },
  {
    "Id": "30",
    "Name": "UIAutomation 0.6.11",
    "DevelopmentStatus": "Beta",
    "Description": "This is a bug fix release. Also, the coverage of unit tests has been increased.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-03-15T01:12:40.11-07:00",
    "Files": [
      {
        "Id": "84fa5b42-e28f-42ab-a2b8-97af1adbda66",
        "FileName": "UIAutomation.0.6.11.zip",
        "Url": "./30/84fa5b42-e28f-42ab-a2b8-97af1adbda66",
        "Type": "Application",
        "UploadDate": "2012-03-15T01:12:38.14-07:00"
      },
      {
        "Id": "2152e55e-8865-4d37-8e4e-7e2ce790474f",
        "FileName": "UIAutomation.sources.0.6.11.zip",
        "Url": "./30/2152e55e-8865-4d37-8e4e-7e2ce790474f",
        "Type": "Source Code",
        "UploadDate": "2012-03-15T01:12:38.203-07:00"
      }
    ]
  },
  {
    "Id": "31",
    "Name": "UIAutomation 0.6.10",
    "DevelopmentStatus": "Beta",
    "Description": "This release introduces a new cmdlet, Get-UIAControlByWin32Api (an ugly name?)\nGet-UIAWindow -pn mmc | Get-UIAControlByWin32Api -Name OK # works only with control that have a handle\n\nalso, the Get-UIAWindowFromHandle is added (almost the same as Get-UIAControlFromHandle, but it sets the [UIAutomation.CurrentData]::CurrentWindow variable as all the Get-*Window* cmdlets do)\nGet-UIAWindowFromHandle -Handle ...\n\nand bug fix here and there...",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-03-11T10:35:49.903-07:00",
    "Files": [
      {
        "Id": "c43447cf-ef7e-479f-bd1e-aa6487201d02",
        "FileName": "UIAutomation.0.6.10.zip",
        "Url": "./31/c43447cf-ef7e-479f-bd1e-aa6487201d02",
        "Type": "Application",
        "UploadDate": "2012-03-11T10:35:47.827-07:00"
      },
      {
        "Id": "5c039c53-2be3-4a93-827f-2e0c3146b760",
        "FileName": "UIAutomation.sources.0.6.10.zip",
        "Url": "./31/5c039c53-2be3-4a93-827f-2e0c3146b760",
        "Type": "Source Code",
        "UploadDate": "2012-03-11T10:35:48.03-07:00"
      }
    ]
  },
  {
    "Id": "32",
    "Name": "UIAutomation 0.6.9",
    "DevelopmentStatus": "Beta",
    "Description": "This is one more bug fix release.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-03-10T05:59:36.74-08:00",
    "Files": [
      {
        "Id": "5b85eb8e-efb8-48f5-ad2a-1317f02dd643",
        "FileName": "UIAutomation.0.6.9.zip",
        "Url": "./32/5b85eb8e-efb8-48f5-ad2a-1317f02dd643",
        "Type": "Application",
        "UploadDate": "2012-03-10T05:59:35.003-08:00"
      },
      {
        "Id": "d8cc4994-7d86-4dfc-a5cc-998c8b44360a",
        "FileName": "UIAutomation.sources.0.6.9.zip",
        "Url": "./32/d8cc4994-7d86-4dfc-a5cc-998c8b44360a",
        "Type": "Source Code",
        "UploadDate": "2012-03-07T11:24:15.177-08:00"
      }
    ]
  },
  {
    "Id": "33",
    "Name": "UIAutomation 0.6.8",
    "DevelopmentStatus": "Beta",
    "Description": "This is a bug fixing and improving release.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-03-06T12:48:36.263-08:00",
    "Files": [
      {
        "Id": "37d609ca-a593-4b03-88cc-a3c5199e94d2",
        "FileName": "UIAutomation.0.6.8.zip",
        "Url": "./33/37d609ca-a593-4b03-88cc-a3c5199e94d2",
        "Type": "Application",
        "UploadDate": "2012-03-06T12:48:34.327-08:00"
      },
      {
        "Id": "36930e0e-d433-4edd-a3da-cfb197f83e5f",
        "FileName": "UIAutomation.sources.0.6.8.zip",
        "Url": "./33/36930e0e-d433-4edd-a3da-cfb197f83e5f",
        "Type": "Source Code",
        "UploadDate": "2012-03-06T12:48:34.373-08:00"
      }
    ]
  },
  {
    "Id": "34",
    "Name": "UIAutomation 0.6.7",
    "DevelopmentStatus": "Beta",
    "Description": "The most of changes were produced is a bug fix.\n\nIn addition, several new parameters are introduced here:\nGet-UIAWindow -pn mmc # the old good -ProcessName or -pn\nGet-UIAWindow -pid (Get-Process -Name mmc).Id # -ProcessId or -pid\nGet-UIAWindow -p (Get-Process -Name mmc) # -Process or -p\nStart-Process calc -PassThru | Get-UIAWindow # System.Diagnostics.Process via Pipeline\n\nThis means that instead of using three statements:\nStart-Process C:\\Windows\\system32\\mmc.exe\nsleep -seconds 5\nGet-UIAWindow -pn mmc\n\nwe can use the following one-liner:\nStart-Process C:\\Windows\\System32\\mmc.exe -PassThru | Get-UIAWindow -Seconds 5\n(in case that no mmc window is available after five seconds are gone, the sample above throws an exception. Otherwise, it gets the window when it is available).\n\nAlso, one more cmdlet to get a window or a control:\n(Get-Process -Name mmc)[0].MainWindowHandle | Get-UIAControlFromHandle\nGet-UIAWindow -pn mmc | Read-UIAControlNativeWindowHandle | Get-UIAControlFromHandle\nor almost the same:\n$hwnd = (Get-UIAWindow -pn mmc | Read-UIAControlNativeWindowHandle); Get-UIAControlFromHandle -Handle $hwnd\nor a control by handle:\n$h = Get-UIAWindow -pn mmc | Read-UIAControlNativeWindowHandle; \nGet-UIAControlFromHandle -Handle $h | Get-UIAButton -Name Cancel | Invoke-UIAButtonClick;",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-03-05T13:40:50.88-08:00",
    "Files": [
      {
        "Id": "6a808be6-9cc0-493e-9d25-1f111d98825d",
        "FileName": "UIAutomation.0.6.7.zip",
        "Url": "./34/6a808be6-9cc0-493e-9d25-1f111d98825d",
        "Type": "Application",
        "UploadDate": "2012-03-05T13:40:49.007-08:00"
      },
      {
        "Id": "2d530c59-95d4-44eb-8399-1547e0525b98",
        "FileName": "UIAutomation.sources.0.6.7.zip",
        "Url": "./34/2d530c59-95d4-44eb-8399-1547e0525b98",
        "Type": "Application",
        "UploadDate": "2012-03-05T13:40:49.083-08:00"
      }
    ]
  },
  {
    "Id": "35",
    "Name": "UIAutomation 0.6.6",
    "DevelopmentStatus": "Beta",
    "Description": "This is a bug-fix and small-addition release:\nadded cmdlets:\nConvertTo-UIAHashtable\nConvertTo-UIASearchCriteria\nfixed cmdlets:\nGet-UIAControlChildren\nGet-UIAControlDescendants",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-02-27T01:11:37.703-08:00",
    "Files": [
      {
        "Id": "bdbb63ac-1ccc-4e8a-8fd8-d954c87e3b5b",
        "FileName": "UIAutomation.0.6.6.zip",
        "Url": "./35/bdbb63ac-1ccc-4e8a-8fd8-d954c87e3b5b",
        "Type": "Application",
        "UploadDate": "2012-02-27T01:10:25.217-08:00"
      },
      {
        "Id": "94475822-b472-497b-971e-b340f92d90a1",
        "FileName": "UIAutomation.sources.0.6.6.zip",
        "Url": "./35/94475822-b472-497b-971e-b340f92d90a1",
        "Type": "Source Code",
        "UploadDate": "2012-02-27T01:11:35.94-08:00"
      }
    ]
  },
  {
    "Id": "36",
    "Name": "UIAutomation 0.6.5",
    "DevelopmentStatus": "Beta",
    "Description": "The small addition to 0.6.4:\nthe -StepAction parameter in Add-UIAWizardStep is dropped and two new parameters, -StepForwardAction and -StepBackwardAction have been added to the cmdlet\n\nThere was a gap in writing scripts: we had the script recorder from the very beginning, but it was not only command-line (cmdlet), it also generated a lot of code that empeded understanding.\nIn addition, a small spy application called UIAutomationSpy is introduced. It's now ugly and trembling, nonetheless, it works somehow and helps to recognize a control. Just run UIAutomationSpy.exe and click the Start button, it will display what it can display in the rich text box.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-02-24T13:26:57.277-08:00",
    "Files": [
      {
        "Id": "fefa0bd7-f721-4558-be9c-c756f8a1f956",
        "FileName": "UIAutomation.0.6.5.zip",
        "Url": "./36/fefa0bd7-f721-4558-be9c-c756f8a1f956",
        "Type": "Application",
        "UploadDate": "2012-02-24T13:26:54.823-08:00"
      },
      {
        "Id": "0104f06e-7147-4a9f-bef2-34830a55fdeb",
        "FileName": "UIAutomation.samples.0.6.5.zip",
        "Url": "./36/0104f06e-7147-4a9f-bef2-34830a55fdeb",
        "Type": "Example",
        "UploadDate": "2012-02-24T13:26:54.853-08:00"
      },
      {
        "Id": "f410da93-115e-4647-b439-710aacc927e8",
        "FileName": "UIAutomation.src.0.6.5.zip",
        "Url": "./36/f410da93-115e-4647-b439-710aacc927e8",
        "Type": "Source Code",
        "UploadDate": "2012-02-24T13:26:54.87-08:00"
      }
    ]
  },
  {
    "Id": "37",
    "Name": "UIAutomation 0.6.4",
    "DevelopmentStatus": "Beta",
    "Description": "The Test-UIAcontrol cmdlet is now called Test-UIAControlState.\nThere is its brother, the Wait-UIAControlState cmdlet (that can wait for the proper state or timeout expiration, as do Wait- cmdlets)\n\nDeeper integration with the TMX project.\n\nThe {\"*Wizard*\"} cmdlets: \nNew/Get-UIAWizard\nAdd/Remove-UIAWizardStep\nInvoke-UIAWizard\nStep-UIAWizard\n\nInitial documentation.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-02-24T03:11:18.163-08:00",
    "Files": [
      {
        "Id": "a193d883-75e3-403c-b2cb-a67cc0d5e028",
        "FileName": "UIAutomation.0.6.4.zip",
        "Url": "./37/a193d883-75e3-403c-b2cb-a67cc0d5e028",
        "Type": "Application",
        "UploadDate": "2012-02-24T03:11:16.303-08:00"
      },
      {
        "Id": "2159c2b9-1f2d-4e51-adf9-c9bd5cabf459",
        "FileName": "UIAutomation.samples.0.6.4.zip",
        "Url": "./37/2159c2b9-1f2d-4e51-adf9-c9bd5cabf459",
        "Type": "Example",
        "UploadDate": "2012-02-24T03:11:16.333-08:00"
      },
      {
        "Id": "4a7cf150-d60c-443f-80a7-6cf2293f5767",
        "FileName": "UIAutomation.src.0.6.4.zip",
        "Url": "./37/4a7cf150-d60c-443f-80a7-6cf2293f5767",
        "Type": "Source Code",
        "UploadDate": "2012-02-24T03:11:16.35-08:00"
      }
    ]
  },
  {
    "Id": "38",
    "Name": "UIAutomation 0.6.3",
    "DevelopmentStatus": "Beta",
    "Description": "Cmdlets that have been created or changed:\nTest-UIAControl\nGet-UIAControl and Get-UIA[ControlType]\nGet-UIAifUltraGridRow\nInvoke-UIAifUltraGridSelectItemByName\n\nTest Management capabilities were cut out and placed to the new project (though, the TMX cmdlets shipped with this project as well).",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-02-20T23:59:37.967-08:00",
    "Files": [
      {
        "Id": "766eb60a-5815-474d-a282-024d2701d792",
        "FileName": "UIAutomation.0.6.3.zip",
        "Url": "./38/766eb60a-5815-474d-a282-024d2701d792",
        "Type": "Application",
        "UploadDate": "2012-02-20T23:53:46.263-08:00"
      },
      {
        "Id": "0c46e0c4-d961-4845-8aad-a6486954ba7a",
        "FileName": "UIAutomation.0.6.3.src.zip",
        "Url": "./38/0c46e0c4-d961-4845-8aad-a6486954ba7a",
        "Type": "Source Code",
        "UploadDate": "2012-02-20T23:57:30.727-08:00"
      },
      {
        "Id": "f3c657bf-0c60-45ca-977d-b666be3eb580",
        "FileName": "samples.0.6.3.zip",
        "Url": "./38/f3c657bf-0c60-45ca-977d-b666be3eb580",
        "Type": "Example",
        "UploadDate": "2012-02-20T23:59:36.607-08:00"
      }
    ]
  },
  {
    "Id": "39",
    "Name": "UIAutomation 0.6.2",
    "DevelopmentStatus": "Beta",
    "Description": "The following cmdlets have been created changed, or rewritten:\n\nOut-UIAControlAcceleratorKey\nOut-UIAControlAccessKey\nOut-UIAControlAutomationId\nOut-UIAControlBoundingRectangle\nOut-UIAControlClass\nOut-UIAControlFrameworkIdKey\nOut-UIAControlHasKeyboardFocus\nOut-UIAControlHelpText\nOut-UIAControlIsDisabled\nOut-UIAControlIsEnabled\nOut-UIAControlIsKeyboardFocusable\nOut-UIAControlIsOffscreen\nOut-UIAControlIsPassword\nOut-UIAControlIsRequiredForForm\nOut-UIAControlItemStatus\nOut-UIAControlItemType\nOut-UIAControlLabeledBy\nOut-UIAControlLocalizedControlType\nOut-UIAControlName\nOut-UIAControlNativeWindowHandlee\nOut-UIAControlOrientation\nOut-UIAControlProcessId\nOut-UIAControlType\nGet-UIAScreenshot\nSave-UIAScreenshot\nGet-UIAControlAncestors\nGet-UIAControlChildren\nGet-UIAControlDescendants\nGet-UIAControlParent",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-02-16T06:27:42.207-08:00",
    "Files": [
      {
        "Id": "01001429-c370-41c1-98f1-288ac83a6b0e",
        "FileName": "UIAutomation.0.6.2.zip",
        "Url": "./39/01001429-c370-41c1-98f1-288ac83a6b0e",
        "Type": "Application",
        "UploadDate": "2012-02-16T06:22:44.447-08:00"
      },
      {
        "Id": "b9f67cb2-e1c9-4868-838a-4fe24a953fec",
        "FileName": "samples.0.6.2.zip",
        "Url": "./39/b9f67cb2-e1c9-4868-838a-4fe24a953fec",
        "Type": "Example",
        "UploadDate": "2012-02-15T07:39:35.637-08:00"
      },
      {
        "Id": "d48c9e67-5f91-4d34-9390-91ae394a6e6f",
        "FileName": "UIAutomation.0.6.2.src.zip",
        "Url": "./39/d48c9e67-5f91-4d34-9390-91ae394a6e6f",
        "Type": "Source Code",
        "UploadDate": "2012-02-16T06:22:44.493-08:00"
      }
    ]
  },
  {
    "Id": "40",
    "Name": "UIAutomation 0.6.1",
    "DevelopmentStatus": "Beta",
    "Description": "this is bug fix release",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-02-14T01:14:02.313-08:00",
    "Files": [
      {
        "Id": "9265f415-6fcb-4af6-8517-176cf76e51ca",
        "FileName": "UIAutomation.0.6.1.zip",
        "Url": "./40/9265f415-6fcb-4af6-8517-176cf76e51ca",
        "Type": "Application",
        "UploadDate": "2012-02-14T01:06:27.507-08:00"
      },
      {
        "Id": "0db0ff3e-8409-409f-b9c2-310428ec58d7",
        "FileName": "UIAutomation.0.6.1.src.zip",
        "Url": "./40/0db0ff3e-8409-409f-b9c2-310428ec58d7",
        "Type": "Source Code",
        "UploadDate": "2012-02-14T01:11:39.42-08:00"
      }
    ]
  },
  {
    "Id": "41",
    "Name": "UIAutomation 0.6",
    "DevelopmentStatus": "Beta",
    "Description": "This is the first release to public. Documentation is coming.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2012-02-14T01:12:36.64-08:00",
    "Files": [
      {
        "Id": "a3ad6d9c-5e2b-45f8-a5fa-1d9f273cf73f",
        "FileName": "UIAutomation.0.6.zip",
        "Url": "./41/a3ad6d9c-5e2b-45f8-a5fa-1d9f273cf73f",
        "Type": "Application",
        "UploadDate": "2012-02-10T14:18:28.31-08:00"
      },
      {
        "Id": "716dd8be-44d0-45fa-b394-0486ea9c072a",
        "FileName": "UIAutomation.0.6.src.zip",
        "Url": "./41/716dd8be-44d0-45fa-b394-0486ea9c072a",
        "Type": "Source Code",
        "UploadDate": "2012-02-10T14:56:43.657-08:00"
      }
    ]
  },
  {
    "Id": "42",
    "Name": "UIAutomation 0.8.6",
    "DevelopmentStatus": "Planning",
    "Description": "!! Added:\n* the Get-UIAWindow cmdlet now supports -AutomaitonId and -Class parameters (with or without the -Name parameter)\n{code:powershell}\nStart-Process calc;\nsleep -Milliseconds 500;\n# powershell.exe\nGet-UIAWindow -Class Console* | Read-UIAControlName;\n# calc.exe\nGet-UIAWindow -Class *frame* | Read-UIAControlName;\n{code:powershell}\n* the -Recurse parameter to the Get-UIAWindow cmdlet\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem -Name help | Invoke-UIAMenuItemExpand | Get-UIAMenuItem -Name *about* | Invoke-UIAMenuItemClick;\n# two windows\nGet-UIAWindow -pn calc -Recurse | Read-UIAControlName;\n# the About Calculator window\nGet-UIAWindow -pn calc -n *about* | Read-UIAControlName;\n{code:powershell}\n* the -Recurse parameter in the Get-UIAWindow cmdlet is set $false by default for code compatibility. In new code (-pn, -pid, -InputObject parameters + -n), it is set $true by default:\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem help | Invoke-UIAMenuItemExpand | Get-UIAMenuItem -n *about* | Invoke-UIAMenuItemClick;\n# -Recurse = $false, though you can set it $true\nGet-UIAWindow -pn calc;\nGet-UIAWindow -pid (Get-Process calc).Id;\nGet-UIAWindow -InputObject (Get-Process calc);\n# -Recurse = $true\nGet-UIAWindow -pn calc -Name *about*; # one window\nGet-UIAWindow -pn calc -Name *calc*; # two windows\n# earlier, we needed to issue somethink like:\nGet-UIAWindow -pn calc | Get-UIAChildWindow -Name *about*; # one window\n{code:powershell}\n* the {\"Set-UIA[ControlType]ToggleState\"} cmdlet\n{code:powershell}\nSet-UIACheckBoxToggleState $true;\nSet-UIACheckBoxToggleState $false;\n{code:powershell}\n* the Wait-UIAWindow cmdlet. This cmdlet works exactly as the Get-UIAWindow cmdlet (in fact, inherits from) with the only difference: the Wait- cmdlet returns $true/$false instead of AutomationElement/Exception\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem help | Invoke-UIAMenuItemExpand | Get-UIAMenuItem -n *about* | Invoke-UIAMenuItemClick;\nStart-Process calc -PassThru;\n\n# by process name\n# $true\nWait-UIAWindow -pn calc;\n# $true\nWait-UIAWindow -pn calc -n *about*;\n# $true\nWait-UIAWindow -pn calc -c *32770*;\n# $true\nWait-UIAWindow -pn calc -c *frame*;\n# $false\nWait-UIAWindow -pn calc -c *aaa*;\n\n# by process object\n# $true\nWait-UIAWindow -InputObject (Get-Process calc);\n\n# by process Id\n# $true\nWait-UIAWindow -pid (Get-Process calc).Id;\n# $true\nWait-UIAWindow -pid (Get-Process calc).Id -n *calc*;\n# $true\nWait-UIAWindow -pid (Get-Process calc).Id -n *about*;\n# $false\nWait-UIAWindow -pid (Get-Process calc).Id -n *asdf*;\n\n# by window title (name)\n# $false (there is no recursive sarch by default)\nWait-UIAWindow -n *about*\n{code:powershell}\n* the Get-UIAWindow cmdlet (and the Wait-UIAWindow cmdlet as well) supports -AutomationId and -Class parameters in recurse search:\n{code:powershell}\nStart-Process calc -PassThru | Get-UIAWindow | Get-UIAMenuItem help | Invoke-UIAMenuItemExpand | Get-UIAMenuItem -n *about* | Invoke-UIAMenuItemClick;\n\n# the good old way to get a window by process name\nGet-UIAWindow -pn calc;\n\n# all windows the process exposes\nGet-UIAWindow -pn calc -Recurse;\n\n# the About Calculator window\nGet-UIAWindow -pn calc -Name *about*;\n\n# both windows, \"Calculator\" and \"AboutCalculator\"\nGet-UIAWindow -pn calc -Name *calc*;\n\n# the main window (ClassName -eq 'CalcFrame')\nGet-UIAWindow -pn calc -Class *frame*;\n\n# the About window (ClassName -eq '#32770')\nGet-UIAWindow -pn calc -Class *327* | Read-UIAControlClass;\nGet-UIAWindow -pn calc -Class \"#32770\";\n{code:powershell}\n* the Get-UIAWindow and Wait-UIAWindow cmdlets now support search for a window or windows only if a certain control or control are on it/them.\nIt's especially useful (along with other ways to use this) for testing of wizards. For example, a typical setup. After you pressed the Install button, it shows one or more pages. You need to catch the last page, \"Complete\", for example.\nIf you use the folllowing code, you'll get an error:\n{code:powershell}\nGet-UIAWindow -n *wizard*title* -Seconds 120 | Wait-UIAControlState -SearchCriteria @{controlType=\"text\";name=\"*complete*\"} -Seconds 300;\n{code:powershell}\nBy the time the last page appeared, you window is gone (every page is a window with its own handle).\nNow, the window will be returned only after a control of interest is gotten:\n{code:powershell}\nGet-UIAWindow -n *wizard*title* -WithControl @{controlType=\"text\";name=\"*complete*\"} -Seconds 480;\n{code:powershell}\nAnother sample is the following (we perform it with hands):\n{code:powershell}\n# start calc.exe and ensure that it's in the Standard mode\n# run code:\nGet-UIAWindow -pn calc -Seconds 60 -WithControl @{controltype=\"button\";name=\"clear*all*\"}\n# change mode to Statistics: menu item View -> Statistics\n# the Get-UIAWindow cmdlet immediately returns the window. The CAD button is the button that has name \"Clear all...\"\n{code:powershell}\n\n!! Changed:\n* the {\"Invoke-UIA[ControlType]Toggle\"} cmdlets are now obsolete\n\n!! Bug fix:\n* Invoke-UIAControlContextMenu on Windows 8 (added WM_MOUSEMOVE after MOUSEDOWN and before MOUSEUP)\n* right click and double click (the same fix)\nNow, this works well:\n{code:powershell}\n# serivces.msc, run powershell as administrator\n# open the Connect... window via right click on the tree item\nGet-UIAWindow -n services | Get-UIATreeItem | Invoke-UIAControlContextMenu | Get-UIAMenuItem -n connect* | Invoke-UIAMenuItemClick;\nGet-UIAWindow -pn mmc -n *select*computer* | Get-UIAButton Cancel | Invoke-UIAButtonClick;\n# double click on a service in the grid:\nGet-UIAWindow -n services | Get-UIADataGrid | Get-UIADataItem BranchCache | Invoke-UIAControlClick -DoubleClick;\n{code:powershell}",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2013-03-12T21:21:14.7-07:00",
    "Files": []
  },
  {
    "Id": "43",
    "Name": "UIAutomation 0.8.7",
    "DevelopmentStatus": "Planning",
    "Description": "* the {\"Get-UIAWindow\"} cmdlet can search windows by more properties like ClassName (a typical case is a window that is a part of system tray and has only ClassName, not Name or AutomationId (AutomationId will also be usable)\n* the {\"Get-UIA[ControlType]\"} cmdlets could search for controls with more conditions: with certain toggle state, with particular value, etc.\n* improvements to work with text fields\n* the Get-UIAControlDescendants cmdlet works with name ignoring case\n\n=====================================================",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2013-03-12T21:06:14.937-07:00",
    "Files": []
  },
  {
    "Id": "44",
    "Name": "UIAutomation 0.8.7 Beta 3",
    "DevelopmentStatus": "Beta",
    "Description": "This release contains some fixes and refactoring.",
    "ReleasedDatge": "0001-01-01T00:00:00",
    "ModifiedDate": "2014-07-17T01:04:32.153-07:00",
    "Files": [
      {
        "Id": "93a26058-f33a-4f5b-bbbe-4a93b0071e00",
        "FileName": "UIAutomation.0.8.7B3.NET35.zip",
        "Url": "./44/93a26058-f33a-4f5b-bbbe-4a93b0071e00",
        "Type": "Application",
        "UploadDate": "2014-07-12T01:46:08.44-07:00"
      },
      {
        "Id": "0c03ddc0-0666-4b73-857b-84ddd63a9149",
        "FileName": "UIAutomation.0.8.7B3.NET40.zip",
        "Url": "./44/0c03ddc0-0666-4b73-857b-84ddd63a9149",
        "Type": "Application",
        "UploadDate": "2014-07-12T01:46:08.83-07:00"
      },
      {
        "Id": "75c5d4f4-20eb-4198-b944-ce3c6f0ca6dd",
        "FileName": "UIAutomation.0.8.7B3.for.ModernUI.zip",
        "Url": "./44/75c5d4f4-20eb-4198-b944-ce3c6f0ca6dd",
        "Type": "Application",
        "UploadDate": "2014-07-12T01:46:09.33-07:00"
      },
      {
        "Id": "f008dbe1-54b5-4f8a-814a-8bf9dbcb42f9",
        "FileName": "UIAutomation.0.8.7B3.sources.zip",
        "Url": "./44/f008dbe1-54b5-4f8a-814a-8bf9dbcb42f9",
        "Type": "Source Code",
        "UploadDate": "2014-07-12T01:46:09.687-07:00"
      },
      {
        "Id": "e1bf995a-f3c9-453d-88bc-0ff6d3509820",
        "FileName": "UIAutomation.0.8.7B3.samples.zip",
        "Url": "./44/e1bf995a-f3c9-453d-88bc-0ff6d3509820",
        "Type": "Example",
        "UploadDate": "2014-07-17T01:03:30.517-07:00"
      }
    ]
  }
]